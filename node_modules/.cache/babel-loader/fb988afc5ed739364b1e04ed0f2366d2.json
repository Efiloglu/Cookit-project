{"ast":null,"code":"var _jsxFileName = \"/home/hyfbe32/cookit-auth/src/components/AppearanceTab/AppearanceTab.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Divider from '@material-ui/core/Divider';\nimport Hidden from '@material-ui/core/Hidden';\nimport Button from '@material-ui/core/Button';\nimport FiberManualRecord from '@material-ui/icons/FiberManualRecord';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport FormatColorResetIcon from '@material-ui/icons/FormatColorReset';\nimport theming from '../../services/theming';\n\nclass AppearanceTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePrimaryColorChange = event => {\n      if (!event) {\n        return;\n      }\n\n      const primaryColor = event.target.value;\n\n      if (!primaryColor) {\n        return;\n      }\n\n      const theme = this.props.theme;\n\n      if (!theme) {\n        return;\n      }\n\n      if (theme.primaryColor.id === primaryColor) {\n        return;\n      }\n\n      this.setState({\n        performingAction: true\n      }, () => {\n        theming.changeTheme({\n          primaryColor: primaryColor,\n          secondaryColor: theme.secondaryColor.id,\n          type: theme.type.id\n        }).then(value => {\n          this.props.openSnackbar('Changed primary color');\n        }).catch(reason => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    };\n\n    this.handleSecondaryColorChange = event => {\n      if (!event) {\n        return;\n      }\n\n      const secondaryColor = event.target.value;\n\n      if (!secondaryColor) {\n        return;\n      }\n\n      const theme = this.props.theme;\n\n      if (!theme) {\n        return;\n      }\n\n      if (theme.secondaryColor.id === secondaryColor) {\n        return;\n      }\n\n      this.setState({\n        performingAction: true\n      }, () => {\n        theming.changeTheme({\n          primaryColor: theme.primaryColor.id,\n          secondaryColor: secondaryColor,\n          type: theme.type.id\n        }).then(value => {\n          this.props.openSnackbar('Changed secondary color');\n        }).catch(reason => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    };\n\n    this.handleTypeChange = event => {\n      if (!event) {\n        return;\n      }\n\n      const type = event.target.value;\n\n      if (!type) {\n        return;\n      }\n\n      const theme = this.props.theme;\n\n      if (!theme) {\n        return;\n      }\n\n      if (theme.type.id === type) {\n        return;\n      }\n\n      this.setState({\n        performingAction: true\n      }, () => {\n        theming.changeTheme({\n          primaryColor: theme.primaryColor.id,\n          secondaryColor: theme.secondaryColor.id,\n          type: type\n        }).then(value => {\n          this.props.openSnackbar('Changed type');\n        }).catch(reason => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    };\n\n    this.handleResetClick = () => {\n      const theme = this.props.theme;\n\n      if (!theme) {\n        return;\n      }\n\n      if (theming.isDefaultTheme(theme)) {\n        return;\n      }\n\n      this.setState({\n        performingAction: true\n      }, () => {\n        theming.resetTheme().then(value => {\n          this.props.openSnackbar('Reset theme');\n        }).catch(reason => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    };\n\n    this.state = {\n      performingAction: false\n    };\n  }\n\n  render() {\n    // Properties\n    const theme = this.props.theme;\n\n    if (!theme) {\n      return null;\n    }\n\n    const performingAction = this.state.performingAction;\n    return React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(List, {\n      disablePadding: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Box, {\n      mb: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(FiberManualRecord, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    })), React.createElement(FormControl, {\n      disabled: performingAction,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Primary color\"), React.createElement(Hidden, {\n      smUp: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(Select, {\n      native: true,\n      value: theme.primaryColor.id,\n      onChange: this.handlePrimaryColorChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, Object.keys(theming.colors).map(color => {\n      color = theming.colors[color];\n      return React.createElement(\"option\", {\n        key: color.id,\n        value: color.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, color.name);\n    }))), React.createElement(Hidden, {\n      xsDown: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(Select, {\n      value: theme.primaryColor.id,\n      onChange: this.handlePrimaryColorChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, Object.keys(theming.colors).map(color => {\n      color = theming.colors[color];\n      return React.createElement(MenuItem, {\n        key: color.id,\n        value: color.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, color.name);\n    })))))), React.createElement(Box, {\n      mb: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(FiberManualRecord, {\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    })), React.createElement(FormControl, {\n      disabled: performingAction,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"Secondary color\"), React.createElement(Hidden, {\n      smUp: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(Select, {\n      native: true,\n      value: theme.secondaryColor.id,\n      onChange: this.handleSecondaryColorChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, Object.keys(theming.colors).map(color => {\n      color = theming.colors[color];\n      return React.createElement(\"option\", {\n        key: color.id,\n        value: color.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, color.name);\n    }))), React.createElement(Hidden, {\n      xsDown: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(Select, {\n      value: theme.secondaryColor.id,\n      onChange: this.handleSecondaryColorChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, Object.keys(theming.colors).map(color => {\n      color = theming.colors[color];\n      return React.createElement(MenuItem, {\n        key: color.id,\n        value: color.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, color.name);\n    })))))), React.createElement(Box, {\n      mb: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(InvertColorsIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    })), React.createElement(FormControl, {\n      disabled: performingAction,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, \"Type\"), React.createElement(Hidden, {\n      smUp: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(Select, {\n      native: true,\n      value: theme.type.id,\n      onChange: this.handleTypeChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, Object.keys(theming.types).map(type => {\n      type = theming.types[type];\n      return React.createElement(\"option\", {\n        key: type.id,\n        value: type.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, type.name);\n    }))), React.createElement(Hidden, {\n      xsDown: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(Select, {\n      value: theme.type.id,\n      onChange: this.handleTypeChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, Object.keys(theming.types).map(type => {\n      type = theming.types[type];\n      return React.createElement(MenuItem, {\n        key: type.id,\n        value: type.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, type.name);\n    })))))), React.createElement(Box, {\n      mt: 2,\n      mb: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(Divider, {\n      light: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    })), React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(Hidden, {\n      xsDown: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(FormatColorResetIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }))), React.createElement(ListItemText, {\n      primary: \"Reset theme\",\n      secondary: \"Changes will be reset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }), React.createElement(ListItemSecondaryAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"secondary\",\n      disabled: theming.isDefaultTheme(theme) || performingAction,\n      variant: \"contained\",\n      onClick: this.handleResetClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, \"Reset\")))));\n  }\n\n}\n\nAppearanceTab.propTypes = {\n  // Properties\n  theme: PropTypes.object.isRequired,\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\nexport default AppearanceTab;","map":{"version":3,"sources":["/home/hyfbe32/cookit-auth/src/components/AppearanceTab/AppearanceTab.js"],"names":["React","Component","PropTypes","DialogContent","Box","List","ListItem","ListItemIcon","ListItemText","ListItemSecondaryAction","FormControl","InputLabel","Select","MenuItem","Divider","Hidden","Button","FiberManualRecord","InvertColorsIcon","FormatColorResetIcon","theming","AppearanceTab","constructor","props","handlePrimaryColorChange","event","primaryColor","target","value","theme","id","setState","performingAction","changeTheme","secondaryColor","type","then","openSnackbar","catch","reason","code","message","finally","handleSecondaryColorChange","handleTypeChange","handleResetClick","isDefaultTheme","resetTheme","state","render","Object","keys","colors","map","color","name","types","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport Box from '@material-ui/core/Box';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Divider from '@material-ui/core/Divider';\nimport Hidden from '@material-ui/core/Hidden';\nimport Button from '@material-ui/core/Button';\n\nimport FiberManualRecord from '@material-ui/icons/FiberManualRecord';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport FormatColorResetIcon from '@material-ui/icons/FormatColorReset';\n\nimport theming from '../../services/theming';\n\nclass AppearanceTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      performingAction: false\n    };\n  }\n\n  handlePrimaryColorChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const primaryColor = event.target.value;\n\n    if (!primaryColor) {\n      return;\n    }\n\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (theme.primaryColor.id === primaryColor) {\n      return;\n    }\n\n    this.setState({\n      performingAction: true\n    }, () => {\n      theming.changeTheme({\n        primaryColor: primaryColor,\n        secondaryColor: theme.secondaryColor.id,\n        type: theme.type.id\n      }).then((value) => {\n        this.props.openSnackbar('Changed primary color');\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  handleSecondaryColorChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const secondaryColor = event.target.value;\n\n    if (!secondaryColor) {\n      return;\n    }\n\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (theme.secondaryColor.id === secondaryColor) {\n      return;\n    }\n\n    this.setState({\n      performingAction: true\n    }, () => {\n      theming.changeTheme({\n        primaryColor: theme.primaryColor.id,\n        secondaryColor: secondaryColor,\n        type: theme.type.id\n      }).then((value) => {\n        this.props.openSnackbar('Changed secondary color');\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  handleTypeChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const type = event.target.value;\n\n    if (!type) {\n      return;\n    }\n\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (theme.type.id === type) {\n      return;\n    }\n\n    this.setState({\n      performingAction: true\n    }, () => {\n      theming.changeTheme({\n        primaryColor: theme.primaryColor.id,\n        secondaryColor: theme.secondaryColor.id,\n        type: type\n      }).then((value) => {\n        this.props.openSnackbar('Changed type');\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  handleResetClick = () => {\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (theming.isDefaultTheme(theme)) {\n      return;\n    }\n\n    this.setState({\n      performingAction: true\n    }, () => {\n      theming.resetTheme().then((value) => {\n        this.props.openSnackbar('Reset theme');\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  render() {\n    // Properties\n    const { theme } = this.props;\n\n    if (!theme) {\n      return null;\n    }\n\n    const { performingAction } = this.state;\n\n    return (\n      <DialogContent>\n        <List disablePadding>\n          <Box mb={1}>\n            <ListItem>\n              <ListItemIcon>\n                <FiberManualRecord color=\"primary\" />\n              </ListItemIcon>\n\n              <FormControl disabled={performingAction} fullWidth>\n                <InputLabel>Primary color</InputLabel>\n\n                <Hidden smUp>\n                  <Select\n                    native\n                    value={theme.primaryColor.id}\n\n                    onChange={this.handlePrimaryColorChange}>\n                    {Object.keys(theming.colors).map((color) => {\n                      color = theming.colors[color];\n\n                      return (\n                        <option key={color.id} value={color.id}>{color.name}</option>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n\n                <Hidden xsDown>\n                  <Select\n                    value={theme.primaryColor.id}\n\n                    onChange={this.handlePrimaryColorChange}>\n                    {Object.keys(theming.colors).map((color) => {\n                      color = theming.colors[color];\n\n                      return (\n                        <MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n              </FormControl>\n            </ListItem>\n          </Box>\n\n          <Box mb={1}>\n            <ListItem>\n              <ListItemIcon>\n                <FiberManualRecord color=\"secondary\" />\n              </ListItemIcon>\n\n              <FormControl disabled={performingAction} fullWidth>\n                <InputLabel>Secondary color</InputLabel>\n\n                <Hidden smUp>\n                  <Select\n                    native\n                    value={theme.secondaryColor.id}\n\n                    onChange={this.handleSecondaryColorChange}>\n                    {Object.keys(theming.colors).map((color) => {\n                      color = theming.colors[color];\n\n                      return (\n                        <option key={color.id} value={color.id}>{color.name}</option>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n\n                <Hidden xsDown>\n                  <Select\n                    value={theme.secondaryColor.id}\n\n                    onChange={this.handleSecondaryColorChange}>\n                    {Object.keys(theming.colors).map((color) => {\n                      color = theming.colors[color];\n\n                      return (\n                        <MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n              </FormControl>\n            </ListItem>\n          </Box>\n\n          <Box mb={1}>\n            <ListItem>\n              <ListItemIcon>\n                <InvertColorsIcon />\n              </ListItemIcon>\n\n              <FormControl disabled={performingAction} fullWidth>\n                <InputLabel>Type</InputLabel>\n\n                <Hidden smUp>\n                  <Select\n                    native\n                    value={theme.type.id}\n\n                    onChange={this.handleTypeChange}>\n                    {Object.keys(theming.types).map((type) => {\n                      type = theming.types[type];\n\n                      return (\n                        <option key={type.id} value={type.id}>{type.name}</option>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n\n                <Hidden xsDown>\n                  <Select\n                    value={theme.type.id}\n\n                    onChange={this.handleTypeChange}>\n                    {Object.keys(theming.types).map((type) => {\n                      type = theming.types[type];\n\n                      return (\n                        <MenuItem key={type.id} value={type.id}>{type.name}</MenuItem>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n              </FormControl>\n            </ListItem>\n          </Box>\n\n          <Box mt={2} mb={1}>\n            <Divider light />\n          </Box>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <FormatColorResetIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            <ListItemText\n              primary=\"Reset theme\"\n              secondary=\"Changes will be reset\"\n            />\n\n            <ListItemSecondaryAction>\n              <Button\n                color=\"secondary\"\n                disabled={theming.isDefaultTheme(theme) || performingAction}\n                variant=\"contained\"\n\n                onClick={this.handleResetClick}>\n                Reset\n              </Button>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </DialogContent>\n    )\n  }\n}\n\nAppearanceTab.propTypes = {\n  // Properties\n  theme: PropTypes.object.isRequired,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default AppearanceTab;\n"]},"metadata":{},"sourceType":"module"}