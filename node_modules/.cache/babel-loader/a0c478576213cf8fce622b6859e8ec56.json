{"ast":null,"code":"var _jsxFileName = \"/home/hyfbe32/cookit-auth/src/components/DeleteAccountDialog/DeleteAccountDialog.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Hidden from '@material-ui/core/Hidden';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nconst initialState = {\n  username: ''\n};\n\nclass DeleteAccountDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleKeyPress = event => {\n      const userData = this.props.userData;\n\n      if (userData && userData.username) {\n        const username = this.state.username;\n\n        if (!username) {\n          return;\n        }\n\n        if (username !== userData.username) {\n          return;\n        }\n      }\n\n      const key = event.key;\n\n      if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n        return;\n      }\n\n      if (key === 'Enter') {\n        this.props.deleteAccount();\n      }\n    };\n\n    this.handleExited = () => {\n      this.setState(initialState);\n    };\n\n    this.handleUsernameChange = event => {\n      const username = event.target.value;\n      this.setState({\n        username: username\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    // Dialog Properties\n    const dialogProps = this.props.dialogProps; // Custom Properties\n\n    const _this$props = this.props,\n          performingAction = _this$props.performingAction,\n          userData = _this$props.userData; // Custom Functions\n\n    const deleteAccount = this.props.deleteAccount;\n    const username = this.state.username;\n    const hasUsername = userData && userData.username;\n    return React.createElement(Dialog, Object.assign({}, dialogProps, {\n      onKeyPress: this.handleKeyPress,\n      onExited: this.handleExited,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Delete account?\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Box, {\n      mb: hasUsername && 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Deleted accounts can\\u2019t be recovered. All data associated with your account will be deleted.\"), hasUsername && React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Type your username and \", React.createElement(Hidden, {\n      xsDown: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"click\"), React.createElement(Hidden, {\n      smUp: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"tap\"), \" Delete to delete your account. This action is irreversible.\")), hasUsername && React.createElement(TextField, {\n      autoComplete: \"username\",\n      autoFocus: true,\n      color: \"secondary\",\n      disabled: performingAction,\n      fullWidth: true,\n      label: \"Username\",\n      placeholder: userData.username,\n      required: true,\n      type: \"text\",\n      value: username,\n      variant: \"outlined\",\n      onChange: this.handleUsernameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"secondary\",\n      disabled: performingAction,\n      onClick: dialogProps.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      color: \"secondary\",\n      disabled: performingAction || hasUsername && username !== userData.username,\n      variant: \"contained\",\n      onClick: deleteAccount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Delete\")));\n  }\n\n}\n\nDeleteAccountDialog.propTypes = {\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n  // Custom Properties\n  performingAction: PropTypes.bool.isRequired,\n  userData: PropTypes.object,\n  // Custom Functions\n  deleteAccount: PropTypes.func.isRequired\n};\nexport default DeleteAccountDialog;","map":{"version":3,"sources":["/home/hyfbe32/cookit-auth/src/components/DeleteAccountDialog/DeleteAccountDialog.js"],"names":["React","Component","PropTypes","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Hidden","Box","TextField","Button","initialState","username","DeleteAccountDialog","constructor","props","handleKeyPress","event","userData","state","key","altKey","ctrlKey","metaKey","shiftKey","deleteAccount","handleExited","setState","handleUsernameChange","target","value","render","dialogProps","performingAction","hasUsername","onClose","propTypes","object","isRequired","bool","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst initialState = {\n  username: ''\n};\n\nclass DeleteAccountDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  handleKeyPress = (event) => {\n    const { userData } = this.props;\n\n    if (userData && userData.username) {\n      const { username } = this.state;\n\n      if (!username) {\n        return;\n      }\n\n      if (username !== userData.username) {\n        return;\n      }\n    }\n\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.deleteAccount();\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleUsernameChange = (event) => {\n    const username = event.target.value;\n\n    this.setState({\n      username: username\n    });\n  };\n\n  render() {\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    // Custom Properties\n    const { performingAction, userData } = this.props;\n\n    // Custom Functions\n    const { deleteAccount } = this.props;\n\n    const { username } = this.state;\n\n    const hasUsername = userData && userData.username;\n\n    return (\n      <Dialog {...dialogProps} onKeyPress={this.handleKeyPress} onExited={this.handleExited}>\n        <DialogTitle>\n          Delete account?\n        </DialogTitle>\n\n        <DialogContent>\n          <Box mb={hasUsername && 2}>\n            <DialogContentText>\n              Deleted accounts can’t be recovered.\n              All data associated with your account will be deleted.\n            </DialogContentText>\n\n            {hasUsername &&\n              <DialogContentText>\n                Type your username and <Hidden xsDown>click</Hidden><Hidden smUp>tap</Hidden> Delete to delete your account.\n                This action is irreversible.\n              </DialogContentText>\n            }\n          </Box>\n\n          {hasUsername &&\n            <TextField\n              autoComplete=\"username\"\n              autoFocus\n              color=\"secondary\"\n              disabled={performingAction}\n              fullWidth\n              label=\"Username\"\n              placeholder={userData.username}\n              required\n              type=\"text\"\n              value={username}\n              variant=\"outlined\"\n\n              onChange={this.handleUsernameChange}\n            />\n          }\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"secondary\" disabled={performingAction} onClick={dialogProps.onClose}>Cancel</Button>\n          <Button color=\"secondary\" disabled={performingAction || (hasUsername && username !== userData.username)} variant=\"contained\" onClick={deleteAccount}>Delete</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nDeleteAccountDialog.propTypes = {\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Properties\n  performingAction: PropTypes.bool.isRequired,\n  userData: PropTypes.object,\n\n  // Custom Functions\n  deleteAccount: PropTypes.func.isRequired\n};\n\nexport default DeleteAccountDialog;\n"]},"metadata":{},"sourceType":"module"}