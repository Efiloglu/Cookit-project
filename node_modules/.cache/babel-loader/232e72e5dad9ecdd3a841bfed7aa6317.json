{"ast":null,"code":"var _jsxFileName = \"/home/hyfbe32/cookit-auth/src/components/LinksTab/LinksTab.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Box from '@material-ui/core/Box';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport LinkIcon from '@material-ui/icons/Link';\nimport LinkOffIcon from '@material-ui/icons/LinkOff';\nimport FacebookBoxIcon from 'mdi-material-ui/FacebookBox';\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\nimport GoogleIcon from 'mdi-material-ui/Google';\nimport MicrosoftIcon from 'mdi-material-ui/Microsoft';\nimport TwitterIcon from 'mdi-material-ui/Twitter';\nimport YahooIcon from 'mdi-material-ui/Yahoo';\nimport authentication from '../../services/authentication';\n\nclass LinksTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.linkAuthProvider = authProvider => {\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.linkAuthProvider(authProvider.providerId).then(value => {\n          this.props.openSnackbar(\"\".concat(authProvider.name, \" linked\"), 5);\n        }).catch(reason => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    };\n\n    this.unlinkAuthProvider = authProvider => {\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.unlinkAuthProvider(authProvider.providerId).then(value => {\n          this.props.openSnackbar(\"\".concat(authProvider.name, \" unlinked\"), 4);\n        }).catch(reason => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    };\n\n    this.state = {\n      performingAction: false\n    };\n  }\n\n  render() {\n    // Properties\n    const theme = this.props.theme;\n    const performingAction = this.state.performingAction;\n    const authProviders = [{\n      providerId: 'facebook.com',\n      color: '#3c5a99',\n      icon: React.createElement(FacebookBoxIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }),\n      name: 'Facebook'\n    }, {\n      providerId: 'github.com',\n      color: '#24292e',\n      icon: React.createElement(GitHubCircleIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }),\n      name: 'GitHub'\n    }, {\n      providerId: 'google.com',\n      color: '#4285f4',\n      icon: React.createElement(GoogleIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }),\n      name: 'Google'\n    }, {\n      providerId: 'microsoft.com',\n      color: '#f65314',\n      icon: React.createElement(MicrosoftIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }),\n      name: 'Microsoft'\n    }, {\n      providerId: 'twitter.com',\n      color: '#1da1f2',\n      icon: React.createElement(TwitterIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }),\n      name: 'Twitter'\n    }, {\n      providerId: 'yahoo.com',\n      color: '#410093',\n      icon: React.createElement(YahooIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }),\n      name: 'Yahoo'\n    }];\n    return React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(List, {\n      disablePadding: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, authProviders.map(authProvider => {\n      const authProviderData = authentication.authProviderData(authProvider.providerId);\n      let identifier = null;\n\n      if (authProviderData) {\n        const displayName = authProviderData.displayName;\n        const emailAddress = authProviderData.email;\n        const phoneNumber = authProviderData.phoneNumber;\n        identifier = displayName || emailAddress || phoneNumber;\n      }\n\n      return React.createElement(ListItem, {\n        key: authProvider.providerId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Box, {\n        color: theme.type.id === 'light' ? authProvider.color : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, authProvider.icon)), authProviderData && React.createElement(ListItemText, {\n        primary: authProvider.name,\n        secondary: identifier,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), !authProviderData && React.createElement(ListItemText, {\n        primary: authProvider.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(ListItemSecondaryAction, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, authProviderData && React.createElement(Tooltip, {\n        title: \"Unlink\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        disabled: performingAction,\n        onClick: () => this.unlinkAuthProvider(authProvider),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(LinkOffIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      })))), !authProviderData && React.createElement(Tooltip, {\n        title: \"Link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        disabled: performingAction,\n        onClick: () => this.linkAuthProvider(authProvider),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(LinkIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }))))));\n    })));\n  }\n\n}\n\nLinksTab.propTypes = {\n  // Properties\n  theme: PropTypes.object.isRequired,\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\nexport default LinksTab;","map":{"version":3,"sources":["/home/hyfbe32/cookit-auth/src/components/LinksTab/LinksTab.js"],"names":["React","Component","PropTypes","DialogContent","List","ListItem","ListItemIcon","ListItemText","ListItemSecondaryAction","Box","Tooltip","IconButton","LinkIcon","LinkOffIcon","FacebookBoxIcon","GitHubCircleIcon","GoogleIcon","MicrosoftIcon","TwitterIcon","YahooIcon","authentication","LinksTab","constructor","props","linkAuthProvider","authProvider","setState","performingAction","providerId","then","value","openSnackbar","name","catch","reason","code","message","finally","unlinkAuthProvider","state","render","theme","authProviders","color","icon","map","authProviderData","identifier","displayName","emailAddress","email","phoneNumber","type","id","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport Box from '@material-ui/core/Box';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport LinkIcon from '@material-ui/icons/Link';\nimport LinkOffIcon from '@material-ui/icons/LinkOff';\n\nimport FacebookBoxIcon from 'mdi-material-ui/FacebookBox';\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\nimport GoogleIcon from 'mdi-material-ui/Google';\nimport MicrosoftIcon from 'mdi-material-ui/Microsoft';\nimport TwitterIcon from 'mdi-material-ui/Twitter';\nimport YahooIcon from 'mdi-material-ui/Yahoo';\n\nimport authentication from '../../services/authentication';\n\nclass LinksTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      performingAction: false\n    };\n  }\n\n\n  linkAuthProvider = (authProvider) => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.linkAuthProvider(authProvider.providerId).then((value) => {\n        this.props.openSnackbar(`${authProvider.name} linked`, 5);\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  unlinkAuthProvider = (authProvider) => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.unlinkAuthProvider(authProvider.providerId).then((value) => {\n        this.props.openSnackbar(`${authProvider.name} unlinked`, 4);\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  render() {\n    // Properties\n    const { theme } = this.props;\n\n    const { performingAction } = this.state;\n\n    const authProviders = [\n      {\n        providerId: 'facebook.com',\n        color: '#3c5a99',\n        icon: <FacebookBoxIcon />,\n        name: 'Facebook'\n      },\n      {\n        providerId: 'github.com',\n        color: '#24292e',\n        icon: <GitHubCircleIcon />,\n        name: 'GitHub'\n      },\n      {\n        providerId: 'google.com',\n        color: '#4285f4',\n        icon: <GoogleIcon />,\n        name: 'Google'\n      },\n      {\n        providerId: 'microsoft.com',\n        color: '#f65314',\n        icon: <MicrosoftIcon />,\n        name: 'Microsoft'\n      },\n      {\n        providerId: 'twitter.com',\n        color: '#1da1f2',\n        icon: <TwitterIcon />,\n        name: 'Twitter'\n      },\n      {\n        providerId: 'yahoo.com',\n        color: '#410093',\n        icon: <YahooIcon />,\n        name: 'Yahoo'\n      }\n    ];\n\n    return (\n      <DialogContent>\n        <List disablePadding>\n          {authProviders.map((authProvider) => {\n            const authProviderData = authentication.authProviderData(authProvider.providerId);\n            let identifier = null;\n\n            if (authProviderData) {\n              const displayName = authProviderData.displayName;\n              const emailAddress = authProviderData.email;\n              const phoneNumber = authProviderData.phoneNumber;\n\n              identifier = displayName || emailAddress || phoneNumber;\n            }\n\n            return (\n              <ListItem key={authProvider.providerId}>\n                <ListItemIcon>\n                  <Box color={theme.type.id === 'light' ? authProvider.color : null}>\n                    {authProvider.icon}\n                  </Box>\n                </ListItemIcon>\n\n                {authProviderData &&\n                  <ListItemText\n                    primary={authProvider.name}\n                    secondary={identifier}\n                  />\n                }\n\n                {!authProviderData &&\n                  <ListItemText\n                    primary={authProvider.name}\n                  />\n                }\n\n                <ListItemSecondaryAction>\n                  {authProviderData &&\n                    <Tooltip title=\"Unlink\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.unlinkAuthProvider(authProvider)}>\n                          <LinkOffIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n\n                  {!authProviderData &&\n                    <Tooltip title=\"Link\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.linkAuthProvider(authProvider)}>\n                          <LinkIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </List>\n      </DialogContent>\n    )\n  }\n}\n\nLinksTab.propTypes = {\n  // Properties\n  theme: PropTypes.object.isRequired,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default LinksTab;\n"]},"metadata":{},"sourceType":"module"}