{"ast":null,"code":"import _defineProperty from \"/home/hyfbe32/cookit-auth/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/hyfbe32/cookit-auth/src/components/AccountTab/AccountTab.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport validate from 'validate.js';\nimport moment from 'moment';\nimport { withStyles } from '@material-ui/core/styles';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Fade from '@material-ui/core/Fade';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Badge from '@material-ui/core/Badge';\nimport Avatar from '@material-ui/core/Avatar';\nimport Fab from '@material-ui/core/Fab';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Hidden from '@material-ui/core/Hidden';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\nimport CloseIcon from '@material-ui/icons/Close';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport PersonIcon from '@material-ui/icons/Person';\nimport EditIcon from '@material-ui/icons/Edit';\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\nimport EmailIcon from '@material-ui/icons/Email';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport CheckIcon from '@material-ui/icons/Check';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport constraints from '../../constraints';\nimport authentication from '../../services/authentication';\n\nconst styles = theme => ({\n  dialogContent: {\n    paddingTop: theme.spacing(2)\n  },\n  badge: {\n    top: theme.spacing(2),\n    right: -theme.spacing(2)\n  },\n  loadingBadge: {\n    top: '50%',\n    right: '50%'\n  },\n  avatar: {\n    marginRight: 'auto',\n    marginLeft: 'auto',\n    width: theme.spacing(14),\n    height: theme.spacing(14)\n  },\n  nameInitials: {\n    cursor: 'default'\n  },\n  personIcon: {\n    fontSize: theme.spacing(7)\n  },\n  small: {\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n    minHeight: 'initial'\n  }\n});\n\nconst initialState = {\n  profileCompletion: 0,\n  securityRating: 0,\n  showingField: '',\n  avatar: null,\n  avatarUrl: '',\n  firstName: '',\n  lastName: '',\n  username: '',\n  emailAddress: '',\n  performingAction: false,\n  loadingAvatar: false,\n  sentVerificationEmail: false,\n  errors: null\n};\n\nclass AccountTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getNameInitialsOrIcon = () => {\n      const user = this.props.user;\n\n      if (!user) {\n        return null;\n      }\n\n      const _this$props = this.props,\n            classes = _this$props.classes,\n            userData = _this$props.userData;\n\n      if (!userData) {\n        return React.createElement(PersonIcon, {\n          className: classes.personIcon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        });\n      }\n\n      const nameInitials = authentication.user.getNameInitials(_objectSpread({}, user, {}, userData));\n\n      if (nameInitials) {\n        return nameInitials;\n      }\n\n      return React.createElement(PersonIcon, {\n        className: classes.personIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      });\n    };\n\n    this.uploadAvatar = () => {\n      const avatar = this.state.avatar;\n\n      if (!avatar) {\n        return;\n      }\n\n      this.setState({\n        performingAction: true,\n        loadingAvatar: true\n      }, () => {\n        authentication.changeAvatar(avatar).then(value => {\n          const _this$props2 = this.props,\n                user = _this$props2.user,\n                userData = _this$props2.userData;\n          this.setState({\n            profileCompletion: authentication.user.getProfileCompletion(_objectSpread({}, user, {}, userData))\n          }, () => {\n            this.props.openSnackbar('Changed avatar');\n          });\n        }).catch(reason => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false,\n            loadingAvatar: false,\n            avatar: null,\n            avatarUrl: ''\n          });\n        });\n      });\n    };\n\n    this.removeAvatar = () => {\n      const user = this.props.user;\n      const _this$state = this.state,\n            avatar = _this$state.avatar,\n            avatarUrl = _this$state.avatarUrl;\n\n      if (!user.photoURL && !avatar && !avatarUrl) {\n        return;\n      }\n\n      if (!user.photoURL && avatar && avatarUrl || user.photoURL && avatar && avatarUrl) {\n        URL.revokeObjectURL(avatarUrl);\n        this.setState({\n          avatar: null,\n          avatarUrl: ''\n        }, () => {\n          this.props.openSnackbar(\"Removed image \\u201C\".concat(avatar.name, \"\\u201D\"), 5);\n        });\n      } else if (user.photoURL && !avatar && !avatarUrl) {\n        this.setState({\n          performingAction: true,\n          loadingAvatar: true\n        }, () => {\n          authentication.removeAvatar().then(value => {\n            const _this$props3 = this.props,\n                  user = _this$props3.user,\n                  userData = _this$props3.userData;\n            this.setState({\n              profileCompletion: authentication.user.getProfileCompletion(_objectSpread({}, user, {}, userData))\n            }, () => {\n              this.props.openSnackbar('Removed avatar');\n            });\n          }).catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          }).finally(() => {\n            this.setState({\n              performingAction: false,\n              loadingAvatar: false\n            });\n          });\n        });\n      }\n    };\n\n    this.showField = fieldId => {\n      if (!fieldId) {\n        return;\n      }\n\n      this.setState({\n        showingField: fieldId\n      });\n    };\n\n    this.hideFields = callback => {\n      this.setState({\n        showingField: '',\n        firstName: '',\n        lastName: '',\n        username: '',\n        emailAddress: '',\n        errors: null\n      }, () => {\n        if (callback && typeof callback === 'function') {\n          callback();\n        }\n      });\n    };\n\n    this.changeFirstName = () => {\n      const firstName = this.state.firstName;\n      const errors = validate({\n        firstName: firstName\n      }, {\n        firstName: constraints.firstName\n      });\n\n      if (errors) {\n        this.setState({\n          errors: errors\n        });\n        return;\n      }\n\n      this.setState({\n        errors: null\n      }, () => {\n        const userData = this.props.userData;\n\n        if (firstName === userData.firstName) {\n          return;\n        }\n\n        this.setState({\n          performingAction: true\n        }, () => {\n          authentication.changeFirstName(firstName).then(() => {\n            const _this$props4 = this.props,\n                  user = _this$props4.user,\n                  userData = _this$props4.userData;\n            this.setState({\n              profileCompletion: authentication.user.getProfileCompletion(_objectSpread({}, user, {}, userData))\n            }, () => {\n              this.hideFields(() => {\n                this.props.openSnackbar('Changed first name');\n              });\n            });\n          }).catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          }).finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n        });\n      });\n    };\n\n    this.changeLastName = () => {\n      const lastName = this.state.lastName;\n      const errors = validate({\n        lastName: lastName\n      }, {\n        lastName: constraints.lastName\n      });\n\n      if (errors) {\n        this.setState({\n          errors: errors\n        });\n        return;\n      }\n\n      this.setState({\n        errors: null\n      }, () => {\n        const userData = this.props.userData;\n\n        if (lastName === userData.lastName) {\n          return;\n        }\n\n        this.setState({\n          performingAction: true\n        }, () => {\n          authentication.changeLastName(lastName).then(() => {\n            const _this$props5 = this.props,\n                  user = _this$props5.user,\n                  userData = _this$props5.userData;\n            this.setState({\n              profileCompletion: authentication.user.getProfileCompletion(_objectSpread({}, user, {}, userData))\n            }, () => {\n              this.hideFields(() => {\n                this.props.openSnackbar('Changed last name');\n              });\n            });\n          }).catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          }).finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n        });\n      });\n    };\n\n    this.changeUsername = () => {\n      const username = this.state.username;\n      const errors = validate({\n        username: username\n      }, {\n        username: constraints.username\n      });\n\n      if (errors) {\n        this.setState({\n          errors: errors\n        });\n        return;\n      }\n\n      this.setState({\n        errors: null\n      }, () => {\n        const userData = this.props.userData;\n\n        if (username === userData.username) {\n          return;\n        }\n\n        this.setState({\n          performingAction: true\n        }, () => {\n          authentication.changeUsername(username).then(() => {\n            const _this$props6 = this.props,\n                  user = _this$props6.user,\n                  userData = _this$props6.userData;\n            this.setState({\n              profileCompletion: authentication.user.getProfileCompletion(_objectSpread({}, user, {}, userData))\n            }, () => {\n              this.hideFields(() => {\n                this.props.openSnackbar('Changed username');\n              });\n            });\n          }).catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          }).finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n        });\n      });\n    };\n\n    this.changeEmailAddress = () => {\n      const emailAddress = this.state.emailAddress;\n      const errors = validate({\n        emailAddress: emailAddress\n      }, {\n        emailAddress: constraints.emailAddress\n      });\n\n      if (errors) {\n        this.setState({\n          errors: errors\n        });\n        return;\n      }\n\n      this.setState({\n        errors: null\n      }, () => {\n        const user = this.props.user;\n\n        if (emailAddress === user.email) {\n          return;\n        }\n\n        this.setState({\n          performingAction: true\n        }, () => {\n          authentication.changeEmailAddress(emailAddress).then(() => {\n            const _this$props7 = this.props,\n                  user = _this$props7.user,\n                  userData = _this$props7.userData;\n            this.setState({\n              profileCompletion: authentication.user.getProfileCompletion(_objectSpread({}, user, {}, userData))\n            }, () => {\n              this.hideFields(() => {\n                this.props.openSnackbar('Changed e-mail address');\n              });\n            });\n          }).catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          }).finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n        });\n      });\n    };\n\n    this.verifyEmailAddress = () => {\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.verifyEmailAddress().then(() => {\n          this.setState({\n            sentVerificationEmail: true\n          }, () => {\n            this.props.openSnackbar('Sent verification e-mail');\n          });\n        }).catch(reason => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    };\n\n    this.deleteAccount = () => {\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.deleteAccount().then(() => {\n          this.props.openSnackbar('Deleted account');\n        }).catch(reason => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    };\n\n    this.changeField = fieldId => {\n      switch (fieldId) {\n        case 'first-name':\n          this.changeFirstName();\n          return;\n\n        case 'last-name':\n          this.changeLastName();\n          return;\n\n        case 'username':\n          this.changeUsername();\n          return;\n\n        case 'email-address':\n          this.changeEmailAddress();\n          return;\n\n        default:\n          return;\n      }\n    };\n\n    this.handleKeyDown = (event, fieldId) => {\n      if (!event || !fieldId) {\n        return;\n      }\n\n      if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n        return;\n      }\n\n      const key = event.key;\n\n      if (!key) {\n        return;\n      }\n\n      if (key === 'Escape') {\n        this.hideFields();\n      } else if (key === 'Enter') {\n        this.changeField(fieldId);\n      }\n    };\n\n    this.handleAvatarChange = event => {\n      if (!event) {\n        return;\n      }\n\n      const files = event.target.files;\n\n      if (!files) {\n        return;\n      }\n\n      const avatar = files[0];\n\n      if (!avatar) {\n        return;\n      }\n\n      const fileTypes = ['image/gif', 'image/jpeg', 'image/png', 'image/webp', 'image/svg+xml'];\n\n      if (!fileTypes.includes(avatar.type)) {\n        return;\n      }\n\n      if (avatar.size > 20 * 1024 * 1024) {\n        return;\n      }\n\n      this.setState({\n        avatar: avatar,\n        avatarUrl: URL.createObjectURL(avatar)\n      }, () => {\n        this.props.openSnackbar(\"Selected image \\u201C\".concat(avatar.name, \"\\u201D\"), 5);\n      });\n    };\n\n    this.handleFirstNameChange = event => {\n      if (!event) {\n        return;\n      }\n\n      const firstName = event.target.value;\n      this.setState({\n        firstName: firstName\n      });\n    };\n\n    this.handleLastNameChange = event => {\n      if (!event) {\n        return;\n      }\n\n      const lastName = event.target.value;\n      this.setState({\n        lastName: lastName\n      });\n    };\n\n    this.handleUsernameChange = event => {\n      if (!event) {\n        return;\n      }\n\n      const username = event.target.value;\n      this.setState({\n        username: username\n      });\n    };\n\n    this.handleEmailAddressChange = event => {\n      if (!event) {\n        return;\n      }\n\n      const emailAddress = event.target.value;\n      this.setState({\n        emailAddress: emailAddress\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    // Styling\n    const classes = this.props.classes; // Properties\n\n    const _this$props8 = this.props,\n          user = _this$props8.user,\n          userData = _this$props8.userData; // Events\n\n    const onDeleteAccountClick = this.props.onDeleteAccountClick;\n    const _this$state2 = this.state,\n          profileCompletion = _this$state2.profileCompletion,\n          securityRating = _this$state2.securityRating,\n          showingField = _this$state2.showingField,\n          performingAction = _this$state2.performingAction,\n          loadingAvatar = _this$state2.loadingAvatar,\n          avatar = _this$state2.avatar,\n          avatarUrl = _this$state2.avatarUrl,\n          firstName = _this$state2.firstName,\n          lastName = _this$state2.lastName,\n          username = _this$state2.username,\n          emailAddress = _this$state2.emailAddress,\n          sentVerificationEmail = _this$state2.sentVerificationEmail,\n          errors = _this$state2.errors;\n    const hasFirstName = userData && userData.firstName;\n    const hasLastName = userData && userData.lastName;\n    const hasUsername = userData && userData.username;\n    return React.createElement(DialogContent, {\n      classes: {\n        root: classes.dialogContent\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708\n      },\n      __self: this\n    }, React.createElement(Box, {\n      mb: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709\n      },\n      __self: this\n    }, React.createElement(Hidden, {\n      xsDown: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      alignItems: \"center\",\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 711\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712\n      },\n      __self: this\n    }, React.createElement(Box, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713\n      },\n      __self: this\n    }, React.createElement(Box, {\n      mb: 1.5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714\n      },\n      __self: this\n    }, avatar && avatarUrl && React.createElement(Badge, {\n      classes: {\n        badge: classes.badge\n      },\n      badgeContent: React.createElement(Tooltip, {\n        title: \"Remove\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717\n        },\n        __self: this\n      }, React.createElement(Fab, {\n        classes: {\n          sizeSmall: classes.small\n        },\n        color: \"secondary\",\n        disabled: performingAction,\n        size: \"small\",\n        onClick: this.removeAvatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        fontSize: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 719\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716\n      },\n      __self: this\n    }, loadingAvatar && React.createElement(Badge, {\n      classes: {\n        badge: classes.loadingBadge\n      },\n      badgeContent: React.createElement(Fade, {\n        style: {\n          transitionDelay: '1s'\n        },\n        in: loadingAvatar,\n        unmountOnExit: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725\n        },\n        __self: this\n      }, React.createElement(CircularProgress, {\n        size: 120,\n        thickness: 1.8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 724\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      className: classes.avatar,\n      alt: \"Avatar\",\n      src: avatarUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 732\n      },\n      __self: this\n    })), !loadingAvatar && React.createElement(Avatar, {\n      className: classes.avatar,\n      alt: \"Avatar\",\n      src: avatarUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 737\n      },\n      __self: this\n    })), !avatar && !avatarUrl && React.createElement(React.Fragment, null, user.photoURL && React.createElement(Badge, {\n      classes: {\n        badge: classes.badge\n      },\n      badgeContent: React.createElement(Tooltip, {\n        title: \"Remove\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 746\n        },\n        __self: this\n      }, React.createElement(Fab, {\n        classes: {\n          sizeSmall: classes.small\n        },\n        color: \"secondary\",\n        disabled: performingAction,\n        size: \"small\",\n        onClick: this.removeAvatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 747\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        fontSize: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 748\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745\n      },\n      __self: this\n    }, loadingAvatar && React.createElement(Badge, {\n      classes: {\n        badge: classes.loadingBadge\n      },\n      badgeContent: React.createElement(Fade, {\n        style: {\n          transitionDelay: '1s'\n        },\n        in: loadingAvatar,\n        unmountOnExit: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 754\n        },\n        __self: this\n      }, React.createElement(CircularProgress, {\n        size: 120,\n        thickness: 1.8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 758\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 753\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      className: classes.avatar,\n      alt: \"Avatar\",\n      src: user.photoURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 761\n      },\n      __self: this\n    })), !loadingAvatar && React.createElement(Avatar, {\n      className: classes.avatar,\n      alt: \"Avatar\",\n      src: user.photoURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 766\n      },\n      __self: this\n    })), !user.photoURL && React.createElement(React.Fragment, null, loadingAvatar && React.createElement(Badge, {\n      classes: {\n        badge: classes.loadingBadge\n      },\n      badgeContent: React.createElement(Fade, {\n        style: {\n          transitionDelay: '1s'\n        },\n        in: loadingAvatar,\n        unmountOnExit: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 775\n        },\n        __self: this\n      }, React.createElement(CircularProgress, {\n        size: 120,\n        thickness: 1.8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 779\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 774\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      className: classes.avatar,\n      alt: \"Avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 782\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.nameInitials,\n      variant: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 783\n      },\n      __self: this\n    }, this.getNameInitialsOrIcon()))), !loadingAvatar && React.createElement(Avatar, {\n      className: classes.avatar,\n      alt: \"Avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 791\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.nameInitials,\n      variant: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 792\n      },\n      __self: this\n    }, this.getNameInitialsOrIcon()))))), avatar && avatarUrl && React.createElement(Button, {\n      color: \"primary\",\n      disabled: performingAction,\n      startIcon: React.createElement(CloudUploadIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 804\n        },\n        __self: this\n      }),\n      variant: \"contained\",\n      onClick: this.uploadAvatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 804\n      },\n      __self: this\n    }, \"Upload\"), !avatar && !avatarUrl && React.createElement(React.Fragment, null, React.createElement(\"input\", {\n      id: \"avatar-input\",\n      type: \"file\",\n      hidden: true,\n      accept: \"image/*\",\n      onChange: this.handleAvatarChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 811\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"avatar-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 820\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      component: \"span\",\n      disabled: performingAction,\n      startIcon: React.createElement(PhotoIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 821\n        },\n        __self: this\n      }),\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 821\n      },\n      __self: this\n    }, \"Choose...\"))))), React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 830\n      },\n      __self: this\n    }, React.createElement(Box, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 831\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 832\n      },\n      __self: this\n    }, \"Profile Completion\"), profileCompletion === 0 && React.createElement(Typography, {\n      color: \"error\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 835\n      },\n      __self: this\n    }, profileCompletion, \"%\"), profileCompletion === 100 && React.createElement(Typography, {\n      color: \"primary\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 839\n      },\n      __self: this\n    }, profileCompletion, \"%\"), profileCompletion !== 0 && profileCompletion !== 100 && React.createElement(Typography, {\n      color: \"secondary\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 843\n      },\n      __self: this\n    }, profileCompletion, \"%\"))), React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 848\n      },\n      __self: this\n    }, React.createElement(Box, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 849\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 850\n      },\n      __self: this\n    }, \"Security Rating\"), securityRating === 0 && React.createElement(Typography, {\n      color: \"error\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 853\n      },\n      __self: this\n    }, securityRating, \"%\"), securityRating === 100 && React.createElement(Typography, {\n      color: \"primary\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857\n      },\n      __self: this\n    }, securityRating, \"%\"), securityRating !== 0 && securityRating !== 100 && React.createElement(Typography, {\n      color: \"secondary\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 861\n      },\n      __self: this\n    }, securityRating, \"%\"))))), React.createElement(Hidden, {\n      smUp: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 868\n      },\n      __self: this\n    }, React.createElement(Box, {\n      textAlign: \"center\",\n      mb: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 869\n      },\n      __self: this\n    }, React.createElement(Box, {\n      mb: 1.5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870\n      },\n      __self: this\n    }, avatar && avatarUrl && React.createElement(Badge, {\n      classes: {\n        badge: classes.badge\n      },\n      badgeContent: React.createElement(Tooltip, {\n        title: \"Remove\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 873\n        },\n        __self: this\n      }, React.createElement(Fab, {\n        classes: {\n          sizeSmall: classes.small\n        },\n        color: \"secondary\",\n        disabled: performingAction,\n        size: \"small\",\n        onClick: this.removeAvatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 874\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        fontSize: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 875\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 872\n      },\n      __self: this\n    }, loadingAvatar && React.createElement(Badge, {\n      classes: {\n        badge: classes.loadingBadge\n      },\n      badgeContent: React.createElement(Fade, {\n        style: {\n          transitionDelay: '1s'\n        },\n        in: loadingAvatar,\n        unmountOnExit: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 881\n        },\n        __self: this\n      }, React.createElement(CircularProgress, {\n        size: 120,\n        thickness: 1.8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 885\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 880\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      className: classes.avatar,\n      alt: \"Avatar\",\n      src: avatarUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 888\n      },\n      __self: this\n    })), !loadingAvatar && React.createElement(Avatar, {\n      className: classes.avatar,\n      alt: \"Avatar\",\n      src: avatarUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 893\n      },\n      __self: this\n    })), !avatar && !avatarUrl && React.createElement(React.Fragment, null, user.photoURL && React.createElement(Badge, {\n      classes: {\n        badge: classes.badge\n      },\n      badgeContent: React.createElement(Tooltip, {\n        title: \"Remove\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 902\n        },\n        __self: this\n      }, React.createElement(Fab, {\n        classes: {\n          sizeSmall: classes.small\n        },\n        color: \"secondary\",\n        disabled: performingAction,\n        size: \"small\",\n        onClick: this.removeAvatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 903\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        fontSize: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 904\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 901\n      },\n      __self: this\n    }, loadingAvatar && React.createElement(Badge, {\n      classes: {\n        badge: classes.loadingBadge\n      },\n      badgeContent: React.createElement(CircularProgress, {\n        size: 120,\n        thickness: 1.8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 910\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 909\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      className: classes.avatar,\n      alt: \"Avatar\",\n      src: user.photoURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 912\n      },\n      __self: this\n    })), !loadingAvatar && React.createElement(Avatar, {\n      className: classes.avatar,\n      alt: \"Avatar\",\n      src: user.photoURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 917\n      },\n      __self: this\n    })), !user.photoURL && React.createElement(React.Fragment, null, loadingAvatar && React.createElement(Badge, {\n      classes: {\n        badge: classes.loadingBadge\n      },\n      badgeContent: React.createElement(Fade, {\n        style: {\n          transitionDelay: '1s'\n        },\n        in: loadingAvatar,\n        unmountOnExit: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 926\n        },\n        __self: this\n      }, React.createElement(CircularProgress, {\n        size: 120,\n        thickness: 1.8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 930\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 925\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      className: classes.avatar,\n      alt: \"Avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 933\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.nameInitials,\n      variant: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 934\n      },\n      __self: this\n    }, this.getNameInitialsOrIcon()))), !loadingAvatar && React.createElement(Avatar, {\n      className: classes.avatar,\n      alt: \"Avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 942\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.nameInitials,\n      variant: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 943\n      },\n      __self: this\n    }, this.getNameInitialsOrIcon()))))), avatar && avatarUrl && React.createElement(Button, {\n      color: \"primary\",\n      disabled: performingAction,\n      startIcon: React.createElement(CloudUploadIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 955\n        },\n        __self: this\n      }),\n      variant: \"contained\",\n      onClick: this.uploadAvatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 955\n      },\n      __self: this\n    }, \"Upload\"), !avatar && !avatarUrl && React.createElement(React.Fragment, null, React.createElement(\"input\", {\n      id: \"avatar-input\",\n      type: \"file\",\n      hidden: true,\n      accept: \"image/*\",\n      onChange: this.handleAvatarChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 962\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"avatar-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 971\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      component: \"span\",\n      disabled: performingAction,\n      startIcon: React.createElement(PhotoIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 972\n        },\n        __self: this\n      }),\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 972\n      },\n      __self: this\n    }, \"Choose...\")))), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 980\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 981\n      },\n      __self: this\n    }, React.createElement(Box, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 982\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 983\n      },\n      __self: this\n    }, \"Profile Completion\"), profileCompletion === 0 && React.createElement(Typography, {\n      color: \"error\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 986\n      },\n      __self: this\n    }, profileCompletion, \"%\"), profileCompletion === 100 && React.createElement(Typography, {\n      color: \"primary\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 990\n      },\n      __self: this\n    }, profileCompletion, \"%\"), profileCompletion !== 0 && profileCompletion !== 100 && React.createElement(Typography, {\n      color: \"secondary\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 994\n      },\n      __self: this\n    }, profileCompletion, \"%\"))), React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 999\n      },\n      __self: this\n    }, React.createElement(Box, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1000\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1001\n      },\n      __self: this\n    }, \"Security Rating\"), securityRating === 0 && React.createElement(Typography, {\n      color: \"error\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1004\n      },\n      __self: this\n    }, securityRating, \"%\"), securityRating === 100 && React.createElement(Typography, {\n      color: \"primary\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1008\n      },\n      __self: this\n    }, securityRating, \"%\"), securityRating !== 0 && securityRating !== 100 && React.createElement(Typography, {\n      color: \"secondary\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1012\n      },\n      __self: this\n    }, securityRating, \"%\")))))), React.createElement(List, {\n      disablePadding: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1020\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1021\n      },\n      __self: this\n    }, React.createElement(Hidden, {\n      xsDown: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1022\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1023\n      },\n      __self: this\n    }, React.createElement(PersonIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1024\n      },\n      __self: this\n    }))), !hasFirstName && React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1029\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"No first name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1030\n      },\n      __self: this\n    }, React.createElement(WarningIcon, {\n      color: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1031\n      },\n      __self: this\n    }))), showingField === 'first-name' && React.createElement(TextField, {\n      autoComplete: \"given-name\",\n      autoFocus: true,\n      disabled: performingAction,\n      error: !!(errors && errors.firstName),\n      fullWidth: true,\n      helperText: errors && errors.firstName ? errors.firstName[0] : 'Press Enter to change your first name',\n      label: \"First name\",\n      placeholder: hasFirstName && userData.firstName,\n      required: true,\n      type: \"text\",\n      value: firstName,\n      variant: \"filled\",\n      onBlur: this.hideFields,\n      onKeyDown: event => this.handleKeyDown(event, 'first-name'),\n      onChange: this.handleFirstNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1037\n      },\n      __self: this\n    }), showingField !== 'first-name' && React.createElement(React.Fragment, null, React.createElement(ListItemText, {\n      primary: \"First name\",\n      secondary: hasFirstName ? userData.firstName : 'You don’t have a first name',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1060\n      },\n      __self: this\n    }), React.createElement(ListItemSecondaryAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1065\n      },\n      __self: this\n    }, hasFirstName && React.createElement(Tooltip, {\n      title: \"Change\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1067\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1068\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      disabled: performingAction,\n      onClick: () => this.showField('first-name'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1069\n      },\n      __self: this\n    }, React.createElement(EditIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1070\n      },\n      __self: this\n    })))), !hasFirstName && React.createElement(Button, {\n      color: \"primary\",\n      disabled: performingAction,\n      variant: \"contained\",\n      onClick: () => this.showField('first-name'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1077\n      },\n      __self: this\n    }, \"Add\")))), React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1090\n      },\n      __self: this\n    }, React.createElement(Hidden, {\n      xsDown: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1091\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1092\n      },\n      __self: this\n    }, React.createElement(PersonIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1093\n      },\n      __self: this\n    }))), !hasLastName && React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1098\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"No last name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1099\n      },\n      __self: this\n    }, React.createElement(WarningIcon, {\n      color: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1100\n      },\n      __self: this\n    }))), showingField === 'last-name' && React.createElement(TextField, {\n      autoComplete: \"family-name\",\n      autoFocus: true,\n      disabled: performingAction,\n      error: !!(errors && errors.lastName),\n      fullWidth: true,\n      helperText: errors && errors.lastName ? errors.lastName[0] : 'Press Enter to change your last name',\n      label: \"Last name\",\n      placeholder: hasLastName && userData.lastName,\n      required: true,\n      type: \"text\",\n      value: lastName,\n      variant: \"filled\",\n      onBlur: this.hideFields,\n      onKeyDown: event => this.handleKeyDown(event, 'last-name'),\n      onChange: this.handleLastNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1106\n      },\n      __self: this\n    }), showingField !== 'last-name' && React.createElement(React.Fragment, null, React.createElement(ListItemText, {\n      primary: \"Last name\",\n      secondary: hasLastName ? userData.lastName : 'You don’t have a last name',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1129\n      },\n      __self: this\n    }), React.createElement(ListItemSecondaryAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1134\n      },\n      __self: this\n    }, hasLastName && React.createElement(Tooltip, {\n      title: \"Change\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1137\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      disabled: performingAction,\n      onClick: () => this.showField('last-name'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1138\n      },\n      __self: this\n    }, React.createElement(EditIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1139\n      },\n      __self: this\n    })))), !hasLastName && React.createElement(Button, {\n      color: \"primary\",\n      disabled: performingAction,\n      variant: \"contained\",\n      onClick: () => this.showField('last-name'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1146\n      },\n      __self: this\n    }, \"Add\")))), React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1159\n      },\n      __self: this\n    }, React.createElement(Hidden, {\n      xsDown: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1160\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1161\n      },\n      __self: this\n    }, React.createElement(PersonOutlineIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1162\n      },\n      __self: this\n    }))), !hasUsername && React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1167\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"No username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1168\n      },\n      __self: this\n    }, React.createElement(WarningIcon, {\n      color: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1169\n      },\n      __self: this\n    }))), showingField === 'username' && React.createElement(TextField, {\n      autoComplete: \"username\",\n      autoFocus: true,\n      disabled: performingAction,\n      error: !!(errors && errors.username),\n      fullWidth: true,\n      helperText: errors && errors.username ? errors.username[0] : 'Press Enter to change your username',\n      label: \"Username\",\n      placeholder: hasUsername && userData.username,\n      required: true,\n      type: \"text\",\n      value: username,\n      variant: \"filled\",\n      onBlur: this.hideFields,\n      onKeyDown: event => this.handleKeyDown(event, 'username'),\n      onChange: this.handleUsernameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1175\n      },\n      __self: this\n    }), showingField !== 'username' && React.createElement(React.Fragment, null, React.createElement(ListItemText, {\n      primary: \"Username\",\n      secondary: hasUsername ? userData.username : 'You don’t have a username',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1198\n      },\n      __self: this\n    }), React.createElement(ListItemSecondaryAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1203\n      },\n      __self: this\n    }, hasUsername && React.createElement(Tooltip, {\n      title: \"Change\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1205\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1206\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      disabled: performingAction,\n      onClick: () => this.showField('username'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1207\n      },\n      __self: this\n    }, React.createElement(EditIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1208\n      },\n      __self: this\n    })))), !hasUsername && React.createElement(Button, {\n      color: \"primary\",\n      disabled: performingAction,\n      variant: \"contained\",\n      onClick: () => this.showField('username'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1215\n      },\n      __self: this\n    }, \"Add\")))), React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1228\n      },\n      __self: this\n    }, React.createElement(Hidden, {\n      xsDown: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1229\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1230\n      },\n      __self: this\n    }, React.createElement(EmailIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1231\n      },\n      __self: this\n    }))), user.email && React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1236\n      },\n      __self: this\n    }, React.createElement(React.Fragment, null, user.emailVerified && React.createElement(Tooltip, {\n      title: \"Verified\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1239\n      },\n      __self: this\n    }, React.createElement(CheckIcon, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1240\n      },\n      __self: this\n    })), !user.emailVerified && React.createElement(Tooltip, {\n      title: \"Not verified\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1245\n      },\n      __self: this\n    }, React.createElement(WarningIcon, {\n      color: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1246\n      },\n      __self: this\n    })))), !user.email && React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1254\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"No e-mail address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1255\n      },\n      __self: this\n    }, React.createElement(WarningIcon, {\n      color: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1256\n      },\n      __self: this\n    }))), showingField === 'email-address' && React.createElement(TextField, {\n      autoComplete: \"email\",\n      autoFocus: true,\n      disabled: performingAction,\n      error: !!(errors && errors.emailAddress),\n      fullWidth: true,\n      helperText: errors && errors.emailAddress ? errors.emailAddress[0] : 'Press Enter to change your e-mail address',\n      label: \"E-mail address\",\n      placeholder: user.email,\n      required: true,\n      type: \"email\",\n      value: emailAddress,\n      variant: \"filled\",\n      onBlur: this.hideFields,\n      onKeyDown: event => this.handleKeyDown(event, 'email-address'),\n      onChange: this.handleEmailAddressChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1262\n      },\n      __self: this\n    }), showingField !== 'email-address' && React.createElement(React.Fragment, null, React.createElement(ListItemText, {\n      primary: \"E-mail address\",\n      secondary: user.email ? user.email : 'You don’t have an e-mail address',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1285\n      },\n      __self: this\n    }), user.email && !user.emailVerified && React.createElement(Box, {\n      clone: true,\n      mr: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1291\n      },\n      __self: this\n    }, React.createElement(ListItemSecondaryAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1292\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"Verify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1293\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1294\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"secondary\",\n      disabled: performingAction || sentVerificationEmail,\n      onClick: this.verifyEmailAddress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1295\n      },\n      __self: this\n    }, React.createElement(CheckIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1296\n      },\n      __self: this\n    })))))), React.createElement(ListItemSecondaryAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1304\n      },\n      __self: this\n    }, user.email && React.createElement(Tooltip, {\n      title: \"Change\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1306\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1307\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      disabled: performingAction,\n      onClick: () => this.showField('email-address'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1308\n      },\n      __self: this\n    }, React.createElement(EditIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1309\n      },\n      __self: this\n    })))), !user.email && React.createElement(Button, {\n      color: \"primary\",\n      disabled: performingAction,\n      variant: \"contained\",\n      onClick: () => this.showField('email-address'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1316\n      },\n      __self: this\n    }, \"Add\")))), React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1329\n      },\n      __self: this\n    }, React.createElement(Hidden, {\n      xsDown: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1330\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1331\n      },\n      __self: this\n    }, React.createElement(AccessTimeIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1332\n      },\n      __self: this\n    }))), React.createElement(Hidden, {\n      xsDown: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1336\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: \"Signed in\",\n      secondary: moment(user.metadata.lastSignInTime).format('LLLL'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1337\n      },\n      __self: this\n    })), React.createElement(Hidden, {\n      smUp: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1343\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: \"Signed in\",\n      secondary: moment(user.metadata.lastSignInTime).format('llll'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1344\n      },\n      __self: this\n    }))), React.createElement(Box, {\n      mt: 1,\n      mb: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1351\n      },\n      __self: this\n    }, React.createElement(Divider, {\n      light: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1352\n      },\n      __self: this\n    })), React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1355\n      },\n      __self: this\n    }, React.createElement(Hidden, {\n      xsDown: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1356\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1357\n      },\n      __self: this\n    }, React.createElement(DeleteForeverIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1358\n      },\n      __self: this\n    }))), React.createElement(ListItemText, {\n      primary: \"Delete account\",\n      secondary: \"Accounts can\\u2019t be recovered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1362\n      },\n      __self: this\n    }), React.createElement(ListItemSecondaryAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1367\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"secondary\",\n      disabled: performingAction,\n      variant: \"contained\",\n      onClick: onDeleteAccountClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1368\n      },\n      __self: this\n    }, \"Delete\")))));\n  }\n\n  componentDidMount() {\n    const _this$props9 = this.props,\n          user = _this$props9.user,\n          userData = _this$props9.userData;\n    this.setState({\n      profileCompletion: authentication.user.getProfileCompletion(_objectSpread({}, user, {}, userData)),\n      securityRating: authentication.user.getSecurityRating(user, userData)\n    });\n  }\n\n  componentWillUnmount() {\n    const avatarUrl = this.state.avatarUrl;\n\n    if (avatarUrl) {\n      URL.revokeObjectURL(avatarUrl);\n      this.setState({\n        avatarUrl: ''\n      });\n    }\n  }\n\n}\n\nAccountTab.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n  // Properties\n  user: PropTypes.object.isRequired,\n  userData: PropTypes.object,\n  // Functions\n  openSnackbar: PropTypes.func.isRequired,\n  // Events\n  onDeleteAccountClick: PropTypes.func.isRequired\n};\nexport default withStyles(styles)(AccountTab);","map":{"version":3,"sources":["/home/hyfbe32/cookit-auth/src/components/AccountTab/AccountTab.js"],"names":["React","Component","PropTypes","validate","moment","withStyles","DialogContent","Grid","Typography","Box","Fade","CircularProgress","Badge","Avatar","Fab","Button","List","ListItem","ListItemIcon","ListItemText","ListItemSecondaryAction","Hidden","TextField","Tooltip","IconButton","Divider","CloseIcon","PhotoIcon","CloudUploadIcon","PersonIcon","EditIcon","PersonOutlineIcon","EmailIcon","WarningIcon","CheckIcon","AccessTimeIcon","DeleteForeverIcon","constraints","authentication","styles","theme","dialogContent","paddingTop","spacing","badge","top","right","loadingBadge","avatar","marginRight","marginLeft","width","height","nameInitials","cursor","personIcon","fontSize","small","minHeight","initialState","profileCompletion","securityRating","showingField","avatarUrl","firstName","lastName","username","emailAddress","performingAction","loadingAvatar","sentVerificationEmail","errors","AccountTab","constructor","props","getNameInitialsOrIcon","user","classes","userData","getNameInitials","uploadAvatar","state","setState","changeAvatar","then","value","getProfileCompletion","openSnackbar","catch","reason","code","message","finally","removeAvatar","photoURL","URL","revokeObjectURL","name","showField","fieldId","hideFields","callback","changeFirstName","changeLastName","changeUsername","changeEmailAddress","email","verifyEmailAddress","deleteAccount","changeField","handleKeyDown","event","altKey","ctrlKey","metaKey","shiftKey","key","handleAvatarChange","files","target","fileTypes","includes","type","size","createObjectURL","handleFirstNameChange","handleLastNameChange","handleUsernameChange","handleEmailAddressChange","render","onDeleteAccountClick","hasFirstName","hasLastName","hasUsername","root","sizeSmall","transitionDelay","emailVerified","metadata","lastSignInTime","format","componentDidMount","getSecurityRating","componentWillUnmount","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\nimport moment from 'moment';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Fade from '@material-ui/core/Fade';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Badge from '@material-ui/core/Badge';\nimport Avatar from '@material-ui/core/Avatar';\nimport Fab from '@material-ui/core/Fab';\nimport Button from '@material-ui/core/Button';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport PersonIcon from '@material-ui/icons/Person';\nimport EditIcon from '@material-ui/icons/Edit';\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\nimport EmailIcon from '@material-ui/icons/Email';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport CheckIcon from '@material-ui/icons/Check';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nimport constraints from '../../constraints';\nimport authentication from '../../services/authentication';\n\nconst styles = (theme) => ({\n  dialogContent: {\n    paddingTop: theme.spacing(2)\n  },\n\n  badge: {\n    top: theme.spacing(2),\n    right: -theme.spacing(2)\n  },\n\n  loadingBadge: {\n    top: '50%',\n    right: '50%'\n  },\n\n  avatar: {\n    marginRight: 'auto',\n    marginLeft: 'auto',\n\n    width: theme.spacing(14),\n    height: theme.spacing(14)\n  },\n\n  nameInitials: {\n    cursor: 'default'\n  },\n\n  personIcon: {\n    fontSize: theme.spacing(7)\n  },\n\n  small: {\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n\n    minHeight: 'initial'\n  }\n});\n\nconst initialState = {\n  profileCompletion: 0,\n  securityRating: 0,\n\n  showingField: '',\n\n  avatar: null,\n  avatarUrl: '',\n  firstName: '',\n  lastName: '',\n  username: '',\n  emailAddress: '',\n\n  performingAction: false,\n  loadingAvatar: false,\n  sentVerificationEmail: false,\n\n  errors: null\n};\n\nclass AccountTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  getNameInitialsOrIcon = () => {\n    const { user } = this.props;\n\n    if (!user) {\n      return null;\n    }\n\n    const { classes, userData } = this.props;\n\n    if (!userData) {\n      return <PersonIcon className={classes.personIcon} />;\n    }\n\n    const nameInitials = authentication.user.getNameInitials({\n      ...user,\n      ...userData\n    });\n\n    if (nameInitials) {\n      return nameInitials;\n    }\n\n    return <PersonIcon className={classes.personIcon} />;\n  };\n\n  uploadAvatar = () => {\n    const { avatar } = this.state;\n\n    if (!avatar) {\n      return;\n    }\n\n    this.setState({\n      performingAction: true,\n      loadingAvatar: true\n    }, () => {\n      authentication.changeAvatar(avatar).then((value) => {\n        const { user, userData } = this.props;\n\n        this.setState({\n          profileCompletion: authentication.user.getProfileCompletion({ ...user, ...userData })\n        }, () => {\n          this.props.openSnackbar('Changed avatar');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false,\n          loadingAvatar: false,\n\n          avatar: null,\n          avatarUrl: ''\n        });\n      });\n    });\n  };\n\n  removeAvatar = () => {\n    const { user } = this.props;\n    const { avatar, avatarUrl } = this.state;\n\n    if (!user.photoURL && !avatar && !avatarUrl) {\n      return;\n    }\n\n    if ((!user.photoURL && avatar && avatarUrl) || (user.photoURL && avatar && avatarUrl)) {\n      URL.revokeObjectURL(avatarUrl);\n\n      this.setState({\n        avatar: null,\n        avatarUrl: ''\n      }, () => {\n        this.props.openSnackbar(`Removed image “${avatar.name}”`, 5);\n      });\n    } else if (user.photoURL && !avatar && !avatarUrl) {\n      this.setState({\n        performingAction: true,\n        loadingAvatar: true\n      }, () => {\n        authentication.removeAvatar().then((value) => {\n          const { user, userData } = this.props;\n\n          this.setState({\n            profileCompletion: authentication.user.getProfileCompletion({ ...user, ...userData })\n          }, () => {\n            this.props.openSnackbar('Removed avatar');\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false,\n            loadingAvatar: false\n          });\n        });\n      });\n    }\n  };\n\n  showField = (fieldId) => {\n    if (!fieldId) {\n      return;\n    }\n\n    this.setState({\n      showingField: fieldId\n    });\n  };\n\n  hideFields = (callback) => {\n    this.setState({\n      showingField: '',\n\n      firstName: '',\n      lastName: '',\n      username: '',\n      emailAddress: '',\n\n      errors: null\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  changeFirstName = () => {\n    const { firstName } = this.state;\n\n    const errors = validate({\n      firstName: firstName\n    }, {\n      firstName: constraints.firstName\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState({\n      errors: null\n    }, () => {\n      const { userData } = this.props;\n\n      if (firstName === userData.firstName) {\n        return;\n      }\n\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.changeFirstName(firstName).then(() => {\n          const { user, userData } = this.props;\n\n          this.setState({\n            profileCompletion: authentication.user.getProfileCompletion({ ...user, ...userData })\n          }, () => {\n            this.hideFields(() => {\n              this.props.openSnackbar('Changed first name');\n            });\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    });\n  };\n\n  changeLastName = () => {\n    const { lastName } = this.state;\n\n    const errors = validate({\n      lastName: lastName\n    }, {\n      lastName: constraints.lastName\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState({\n      errors: null\n    }, () => {\n      const { userData } = this.props;\n\n      if (lastName === userData.lastName) {\n        return;\n      }\n\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.changeLastName(lastName).then(() => {\n          const { user, userData } = this.props;\n\n          this.setState({\n            profileCompletion: authentication.user.getProfileCompletion({ ...user, ...userData })\n          }, () => {\n            this.hideFields(() => {\n              this.props.openSnackbar('Changed last name');\n            });\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    });\n  };\n\n  changeUsername = () => {\n    const { username } = this.state;\n\n    const errors = validate({\n      username: username\n    }, {\n      username: constraints.username\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState({\n      errors: null\n    }, () => {\n      const { userData } = this.props;\n\n      if (username === userData.username) {\n        return;\n      }\n\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.changeUsername(username).then(() => {\n          const { user, userData } = this.props;\n\n          this.setState({\n            profileCompletion: authentication.user.getProfileCompletion({ ...user, ...userData })\n          }, () => {\n            this.hideFields(() => {\n              this.props.openSnackbar('Changed username');\n            });\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    });\n  };\n\n  changeEmailAddress = () => {\n    const { emailAddress } = this.state;\n\n    const errors = validate({\n      emailAddress: emailAddress\n    }, {\n      emailAddress: constraints.emailAddress\n    });\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState({\n      errors: null\n    }, () => {\n      const { user } = this.props;\n\n      if (emailAddress === user.email) {\n        return;\n      }\n\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.changeEmailAddress(emailAddress).then(() => {\n          const { user, userData } = this.props;\n\n          this.setState({\n            profileCompletion: authentication.user.getProfileCompletion({ ...user, ...userData })\n          }, () => {\n            this.hideFields(() => {\n              this.props.openSnackbar('Changed e-mail address');\n            });\n          });\n        }).catch((reason) => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    });\n  };\n\n  verifyEmailAddress = () => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.verifyEmailAddress().then(() => {\n        this.setState({\n          sentVerificationEmail: true\n        }, () => {\n          this.props.openSnackbar('Sent verification e-mail');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  deleteAccount = () => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.deleteAccount().then(() => {\n        this.props.openSnackbar('Deleted account');\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.props.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  changeField = (fieldId) => {\n    switch (fieldId) {\n      case 'first-name':\n        this.changeFirstName();\n        return;\n\n      case 'last-name':\n        this.changeLastName();\n        return;\n\n      case 'username':\n        this.changeUsername();\n        return;\n\n      case 'email-address':\n        this.changeEmailAddress();\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  handleKeyDown = (event, fieldId) => {\n    if (!event || !fieldId) {\n      return;\n    }\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (!key) {\n      return;\n    }\n\n    if (key === 'Escape') {\n      this.hideFields();\n    } else if (key === 'Enter') {\n      this.changeField(fieldId);\n    }\n  };\n\n  handleAvatarChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const files = event.target.files;\n\n    if (!files) {\n      return;\n    }\n\n    const avatar = files[0];\n\n    if (!avatar) {\n      return;\n    }\n\n    const fileTypes = [\n      'image/gif',\n      'image/jpeg',\n      'image/png',\n      'image/webp',\n      'image/svg+xml'\n    ];\n\n    if (!fileTypes.includes(avatar.type)) {\n      return;\n    }\n\n    if (avatar.size > (20 * 1024 * 1024)) {\n      return;\n    }\n\n    this.setState({\n      avatar: avatar,\n      avatarUrl: URL.createObjectURL(avatar)\n    }, () => {\n      this.props.openSnackbar(`Selected image “${avatar.name}”`, 5);\n    });\n  };\n\n  handleFirstNameChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const firstName = event.target.value;\n\n    this.setState({\n      firstName: firstName\n    });\n  };\n\n  handleLastNameChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const lastName = event.target.value;\n\n    this.setState({\n      lastName: lastName\n    });\n  };\n\n  handleUsernameChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const username = event.target.value;\n\n    this.setState({\n      username: username\n    });\n  };\n\n  handleEmailAddressChange = (event) => {\n    if (!event) {\n      return;\n    }\n\n    const emailAddress = event.target.value;\n\n    this.setState({\n      emailAddress: emailAddress\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const {\n      user,\n      userData\n    } = this.props;\n\n    // Events\n    const {\n      onDeleteAccountClick\n    } = this.props;\n\n    const {\n      profileCompletion,\n      securityRating,\n\n      showingField,\n\n      performingAction,\n      loadingAvatar,\n\n      avatar,\n      avatarUrl,\n      firstName,\n      lastName,\n      username,\n      emailAddress,\n\n      sentVerificationEmail,\n\n      errors\n    } = this.state;\n\n    const hasFirstName = userData && userData.firstName;\n    const hasLastName = userData && userData.lastName;\n    const hasUsername = userData && userData.username;\n\n    return (\n      <DialogContent classes={{ root: classes.dialogContent }}>\n        <Box mb={2}>\n          <Hidden xsDown>\n            <Grid alignItems=\"center\" container>\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Box mb={1.5}>\n                    {(avatar && avatarUrl) &&\n                      <Badge classes={{ badge: classes.badge }} badgeContent={\n                        <Tooltip title=\"Remove\">\n                          <Fab classes={{ sizeSmall: classes.small }} color=\"secondary\" disabled={performingAction} size=\"small\" onClick={this.removeAvatar}>\n                            <CloseIcon fontSize=\"small\" />\n                          </Fab>\n                        </Tooltip>\n                      }>\n                        {loadingAvatar &&\n                          <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                            <Fade\n                              style={{ transitionDelay: '1s' }}\n                              in={loadingAvatar}\n                              unmountOnExit>\n                              <CircularProgress size={120} thickness={1.8} />\n                            </Fade>\n                          }>\n                            <Avatar className={classes.avatar} alt=\"Avatar\" src={avatarUrl} />\n                          </Badge>\n                        }\n\n                        {!loadingAvatar &&\n                          <Avatar className={classes.avatar} alt=\"Avatar\" src={avatarUrl} />\n                        }\n                      </Badge>\n                    }\n\n                    {(!avatar && !avatarUrl) &&\n                      <>\n                        {user.photoURL &&\n                          <Badge classes={{ badge: classes.badge }} badgeContent={\n                            <Tooltip title=\"Remove\">\n                              <Fab classes={{ sizeSmall: classes.small }} color=\"secondary\" disabled={performingAction} size=\"small\" onClick={this.removeAvatar}>\n                                <CloseIcon fontSize=\"small\" />\n                              </Fab>\n                            </Tooltip>\n                          }>\n                            {loadingAvatar &&\n                              <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                                <Fade\n                                  style={{ transitionDelay: '1s' }}\n                                  in={loadingAvatar}\n                                  unmountOnExit>\n                                  <CircularProgress size={120} thickness={1.8} />\n                                </Fade>\n                              }>\n                                <Avatar className={classes.avatar} alt=\"Avatar\" src={user.photoURL} />\n                              </Badge>\n                            }\n\n                            {!loadingAvatar &&\n                              <Avatar className={classes.avatar} alt=\"Avatar\" src={user.photoURL} />\n                            }\n                          </Badge>\n                        }\n\n                        {!user.photoURL &&\n                          <>\n                            {loadingAvatar &&\n                              <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                                <Fade\n                                  style={{ transitionDelay: '1s' }}\n                                  in={loadingAvatar}\n                                  unmountOnExit>\n                                  <CircularProgress size={120} thickness={1.8} />\n                                </Fade>\n                              }>\n                                <Avatar className={classes.avatar} alt=\"Avatar\">\n                                  <Typography className={classes.nameInitials} variant=\"h2\">\n                                    {this.getNameInitialsOrIcon()}\n                                  </Typography>\n                                </Avatar>\n                              </Badge>\n                            }\n\n                            {!loadingAvatar &&\n                              <Avatar className={classes.avatar} alt=\"Avatar\">\n                                <Typography className={classes.nameInitials} variant=\"h2\">\n                                  {this.getNameInitialsOrIcon()}\n                                </Typography>\n                              </Avatar>\n                            }\n                          </>\n                        }\n                      </>\n                    }\n                  </Box>\n\n                  {(avatar && avatarUrl) &&\n                    <Button color=\"primary\" disabled={performingAction} startIcon={<CloudUploadIcon />} variant=\"contained\" onClick={this.uploadAvatar}>\n                      Upload\n                    </Button>\n                  }\n\n                  {(!avatar && !avatarUrl) &&\n                    <>\n                      <input\n                        id=\"avatar-input\"\n                        type=\"file\"\n                        hidden\n                        accept=\"image/*\"\n\n                        onChange={this.handleAvatarChange}\n                      />\n\n                      <label htmlFor=\"avatar-input\">\n                        <Button color=\"primary\" component=\"span\" disabled={performingAction} startIcon={<PhotoIcon />} variant=\"contained\">\n                          Choose...\n                        </Button>\n                      </label>\n                    </>\n                  }\n                </Box>\n              </Grid>\n\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Profile Completion</Typography>\n\n                  {profileCompletion === 0 &&\n                    <Typography color=\"error\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n\n                  {profileCompletion === 100 &&\n                    <Typography color=\"primary\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n\n                  {(profileCompletion !== 0 && profileCompletion !== 100)  &&\n                    <Typography color=\"secondary\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n                </Box>\n              </Grid>\n\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Security Rating</Typography>\n\n                  {securityRating === 0 &&\n                    <Typography color=\"error\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n\n                  {securityRating === 100 &&\n                    <Typography color=\"primary\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n\n                  {(securityRating !== 0 && securityRating !== 100) &&\n                    <Typography color=\"secondary\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n                </Box>\n              </Grid>\n            </Grid>\n          </Hidden>\n\n          <Hidden smUp>\n            <Box textAlign=\"center\" mb={3}>\n              <Box mb={1.5}>\n                {(avatar && avatarUrl) &&\n                  <Badge classes={{ badge: classes.badge }} badgeContent={\n                    <Tooltip title=\"Remove\">\n                      <Fab classes={{ sizeSmall: classes.small }} color=\"secondary\" disabled={performingAction} size=\"small\" onClick={this.removeAvatar}>\n                        <CloseIcon fontSize=\"small\" />\n                      </Fab>\n                    </Tooltip>\n                  }>\n                    {loadingAvatar &&\n                      <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                        <Fade\n                          style={{ transitionDelay: '1s' }}\n                          in={loadingAvatar}\n                          unmountOnExit>\n                          <CircularProgress size={120} thickness={1.8} />\n                        </Fade>\n                      }>\n                        <Avatar className={classes.avatar} alt=\"Avatar\" src={avatarUrl} />\n                      </Badge>\n                    }\n\n                    {!loadingAvatar &&\n                      <Avatar className={classes.avatar} alt=\"Avatar\" src={avatarUrl} />\n                    }\n                  </Badge>\n                }\n\n                {(!avatar && !avatarUrl) &&\n                  <>\n                    {user.photoURL &&\n                      <Badge classes={{ badge: classes.badge }} badgeContent={\n                        <Tooltip title=\"Remove\">\n                          <Fab classes={{ sizeSmall: classes.small }} color=\"secondary\" disabled={performingAction} size=\"small\" onClick={this.removeAvatar}>\n                            <CloseIcon fontSize=\"small\" />\n                          </Fab>\n                        </Tooltip>\n                      }>\n                        {loadingAvatar &&\n                          <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                            <CircularProgress size={120} thickness={1.8} />\n                          }>\n                            <Avatar className={classes.avatar} alt=\"Avatar\" src={user.photoURL} />\n                          </Badge>\n                        }\n\n                        {!loadingAvatar &&\n                          <Avatar className={classes.avatar} alt=\"Avatar\" src={user.photoURL} />\n                        }\n                      </Badge>\n                    }\n\n                    {!user.photoURL &&\n                      <>\n                        {loadingAvatar &&\n                          <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\n                            <Fade\n                              style={{ transitionDelay: '1s' }}\n                              in={loadingAvatar}\n                              unmountOnExit>\n                              <CircularProgress size={120} thickness={1.8} />\n                            </Fade>\n                          }>\n                            <Avatar className={classes.avatar} alt=\"Avatar\">\n                              <Typography className={classes.nameInitials} variant=\"h2\">\n                                {this.getNameInitialsOrIcon()}\n                              </Typography>\n                            </Avatar>\n                          </Badge>\n                        }\n\n                        {!loadingAvatar &&\n                          <Avatar className={classes.avatar} alt=\"Avatar\">\n                            <Typography className={classes.nameInitials} variant=\"h2\">\n                              {this.getNameInitialsOrIcon()}\n                            </Typography>\n                          </Avatar>\n                        }\n                      </>\n                    }\n                  </>\n                }\n              </Box>\n\n              {(avatar && avatarUrl) &&\n                <Button color=\"primary\" disabled={performingAction} startIcon={<CloudUploadIcon />} variant=\"contained\" onClick={this.uploadAvatar}>\n                  Upload\n                </Button>\n              }\n\n              {(!avatar && !avatarUrl) &&\n                <>\n                  <input\n                    id=\"avatar-input\"\n                    type=\"file\"\n                    hidden\n                    accept=\"image/*\"\n\n                    onChange={this.handleAvatarChange}\n                  />\n\n                  <label htmlFor=\"avatar-input\">\n                    <Button color=\"primary\" component=\"span\" disabled={performingAction} startIcon={<PhotoIcon />} variant=\"contained\">\n                      Choose...\n                    </Button>\n                  </label>\n                </>\n              }\n            </Box>\n\n            <Grid container>\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Profile Completion</Typography>\n\n                  {profileCompletion === 0 &&\n                    <Typography color=\"error\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n\n                  {profileCompletion === 100 &&\n                    <Typography color=\"primary\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n\n                  {(profileCompletion !== 0 && profileCompletion !== 100)  &&\n                    <Typography color=\"secondary\" variant=\"h5\">{profileCompletion}%</Typography>\n                  }\n                </Box>\n              </Grid>\n\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Security Rating</Typography>\n\n                  {securityRating === 0 &&\n                    <Typography color=\"error\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n\n                  {securityRating === 100 &&\n                    <Typography color=\"primary\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n\n                  {(securityRating !== 0 && securityRating !== 100) &&\n                    <Typography color=\"secondary\" variant=\"h5\">{securityRating}%</Typography>\n                  }\n                </Box>\n              </Grid>\n            </Grid>\n          </Hidden>\n        </Box>\n\n        <List disablePadding>\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <PersonIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {!hasFirstName &&\n              <ListItemIcon>\n                <Tooltip title=\"No first name\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            }\n\n            {showingField === 'first-name' &&\n              <TextField\n                autoComplete=\"given-name\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.firstName)}\n                fullWidth\n                helperText={(errors && errors.firstName) ? errors.firstName[0] : 'Press Enter to change your first name'}\n                label=\"First name\"\n                placeholder={hasFirstName && userData.firstName}\n                required\n                type=\"text\"\n                value={firstName}\n                variant=\"filled\"\n\n                onBlur={this.hideFields}\n                onKeyDown={(event) => this.handleKeyDown(event, 'first-name')}\n\n                onChange={this.handleFirstNameChange}\n              />\n            }\n\n            {showingField !== 'first-name' &&\n              <>\n                <ListItemText\n                  primary=\"First name\"\n                  secondary={hasFirstName ? userData.firstName : 'You don’t have a first name'}\n                />\n\n                <ListItemSecondaryAction>\n                  {hasFirstName &&\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.showField('first-name')}>\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n\n                  {!hasFirstName &&\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField('first-name')}>\n                      Add\n                    </Button>\n                  }\n                </ListItemSecondaryAction>\n              </>\n            }\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <PersonIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {!hasLastName &&\n              <ListItemIcon>\n                <Tooltip title=\"No last name\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            }\n\n            {showingField === 'last-name' &&\n              <TextField\n                autoComplete=\"family-name\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.lastName)}\n                fullWidth\n                helperText={(errors && errors.lastName) ? errors.lastName[0] : 'Press Enter to change your last name'}\n                label=\"Last name\"\n                placeholder={hasLastName && userData.lastName}\n                required\n                type=\"text\"\n                value={lastName}\n                variant=\"filled\"\n\n                onBlur={this.hideFields}\n                onKeyDown={(event) => this.handleKeyDown(event, 'last-name')}\n\n                onChange={this.handleLastNameChange}\n              />\n            }\n\n            {showingField !== 'last-name' &&\n              <>\n                <ListItemText\n                  primary=\"Last name\"\n                  secondary={hasLastName ? userData.lastName : 'You don’t have a last name'}\n                />\n\n                <ListItemSecondaryAction>\n                  {hasLastName &&\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.showField('last-name')}>\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n\n                  {!hasLastName &&\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField('last-name')}>\n                      Add\n                    </Button>\n                  }\n                </ListItemSecondaryAction>\n              </>\n            }\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <PersonOutlineIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {!hasUsername &&\n              <ListItemIcon>\n                <Tooltip title=\"No username\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            }\n\n            {showingField === 'username' &&\n              <TextField\n                autoComplete=\"username\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.username)}\n                fullWidth\n                helperText={(errors && errors.username) ? errors.username[0] : 'Press Enter to change your username'}\n                label=\"Username\"\n                placeholder={hasUsername && userData.username}\n                required\n                type=\"text\"\n                value={username}\n                variant=\"filled\"\n\n                onBlur={this.hideFields}\n                onKeyDown={(event) => this.handleKeyDown(event, 'username')}\n\n                onChange={this.handleUsernameChange}\n              />\n            }\n\n            {showingField !== 'username' &&\n              <>\n                <ListItemText\n                  primary=\"Username\"\n                  secondary={hasUsername ? userData.username : 'You don’t have a username'}\n                />\n\n                <ListItemSecondaryAction>\n                  {hasUsername &&\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.showField('username')}>\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n\n                  {!hasUsername &&\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField('username')}>\n                      Add\n                    </Button>\n                  }\n                </ListItemSecondaryAction>\n              </>\n            }\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <EmailIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {user.email &&\n              <ListItemIcon>\n                <>\n                  {user.emailVerified &&\n                    <Tooltip title=\"Verified\">\n                      <CheckIcon color=\"primary\" />\n                    </Tooltip>\n                  }\n\n                  {!user.emailVerified &&\n                    <Tooltip title=\"Not verified\">\n                      <WarningIcon color=\"error\" />\n                    </Tooltip>\n                  }\n                </>\n              </ListItemIcon>\n            }\n\n            {!user.email &&\n              <ListItemIcon>\n                <Tooltip title=\"No e-mail address\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            }\n\n            {showingField === 'email-address' &&\n              <TextField\n                autoComplete=\"email\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.emailAddress)}\n                fullWidth\n                helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : 'Press Enter to change your e-mail address'}\n                label=\"E-mail address\"\n                placeholder={user.email}\n                required\n                type=\"email\"\n                value={emailAddress}\n                variant=\"filled\"\n\n                onBlur={this.hideFields}\n                onKeyDown={(event) => this.handleKeyDown(event, 'email-address')}\n\n                onChange={this.handleEmailAddressChange}\n              />\n            }\n\n            {showingField !== 'email-address' &&\n              <>\n                <ListItemText\n                  primary=\"E-mail address\"\n                  secondary={user.email ? user.email : 'You don’t have an e-mail address'}\n                />\n\n                {(user.email && !user.emailVerified) &&\n                  <Box clone mr={7}>\n                    <ListItemSecondaryAction>\n                      <Tooltip title=\"Verify\">\n                        <div>\n                          <IconButton color=\"secondary\" disabled={performingAction || sentVerificationEmail} onClick={this.verifyEmailAddress}>\n                            <CheckIcon />\n                          </IconButton>\n                        </div>\n                      </Tooltip>\n                    </ListItemSecondaryAction>\n                  </Box>\n                }\n\n                <ListItemSecondaryAction>\n                  {user.email &&\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton disabled={performingAction} onClick={() => this.showField('email-address')}>\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  }\n\n                  {!user.email &&\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField('email-address')}>\n                      Add\n                    </Button>\n                  }\n                </ListItemSecondaryAction>\n              </>\n            }\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <AccessTimeIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            <Hidden xsDown>\n              <ListItemText\n                primary=\"Signed in\"\n                secondary={moment(user.metadata.lastSignInTime).format('LLLL')}\n              />\n            </Hidden>\n\n            <Hidden smUp>\n              <ListItemText\n                primary=\"Signed in\"\n                secondary={moment(user.metadata.lastSignInTime).format('llll')}\n              />\n            </Hidden>\n          </ListItem>\n\n          <Box mt={1} mb={1}>\n            <Divider light />\n          </Box>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <DeleteForeverIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            <ListItemText\n              primary=\"Delete account\"\n              secondary=\"Accounts can’t be recovered\"\n            />\n\n            <ListItemSecondaryAction>\n              <Button color=\"secondary\" disabled={performingAction} variant=\"contained\" onClick={onDeleteAccountClick}>Delete</Button>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </DialogContent>\n    );\n  }\n\n  componentDidMount() {\n    const { user, userData } = this.props;\n\n    this.setState({\n      profileCompletion: authentication.user.getProfileCompletion({ ...user, ...userData }),\n      securityRating: authentication.user.getSecurityRating(user, userData)\n    });\n  }\n\n  componentWillUnmount() {\n    const { avatarUrl } = this.state;\n\n    if (avatarUrl) {\n      URL.revokeObjectURL(avatarUrl);\n\n      this.setState({\n        avatarUrl: ''\n      });\n    }\n  }\n}\n\nAccountTab.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Properties\n  user: PropTypes.object.isRequired,\n  userData: PropTypes.object,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired,\n\n  // Events\n  onDeleteAccountClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AccountTab);\n"]},"metadata":{},"sourceType":"module"}