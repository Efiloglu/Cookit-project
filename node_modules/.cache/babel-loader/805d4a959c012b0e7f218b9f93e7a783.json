{"ast":null,"code":"var _jsxFileName = \"/home/hyfbe32/cookit-auth/src/components/SettingsDialog/SettingsDialog.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Hidden from '@material-ui/core/Hidden';\nimport CloseIcon from '@material-ui/icons/Close';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport PaletteIcon from '@material-ui/icons/Palette';\nimport LinkIcon from '@material-ui/icons/Link';\nimport SecurityIcon from '@material-ui/icons/Security';\nimport SwipeableViews from 'react-swipeable-views';\nimport AccountTab from '../AccountTab';\nimport AppearanceTab from '../AppearanceTab';\nimport LinksTab from '../LinksTab';\nimport SecurityTab from '../SecurityTab';\n\nconst styles = theme => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1)\n  },\n  tabs: {\n    display: 'initial'\n  }\n});\n\nconst tabs = [{\n  key: 'account',\n  icon: React.createElement(AccountCircleIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }),\n  label: 'Account'\n}, {\n  key: 'appearance',\n  icon: React.createElement(PaletteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }),\n  label: 'Appearance'\n}, {\n  key: 'links',\n  icon: React.createElement(LinkIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }),\n  label: 'Links'\n}, {\n  key: 'security',\n  icon: React.createElement(SecurityIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }),\n  label: 'Security'\n}];\nconst initialState = {\n  selectedTab: 0\n};\n\nclass SettingsDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleExited = () => {\n      this.setState(initialState);\n    };\n\n    this.handleTabChange = (event, value) => {\n      this.setState({\n        selectedTab: value\n      });\n    };\n\n    this.handleIndexChange = index => {\n      this.setState({\n        selectedTab: index\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    // Styling\n    const classes = this.props.classes; // Dialog Properties\n\n    const dialogProps = this.props.dialogProps; // Custom Properties\n\n    const _this$props = this.props,\n          user = _this$props.user,\n          userData = _this$props.userData,\n          theme = _this$props.theme; // Custom Functions\n\n    const openSnackbar = this.props.openSnackbar; // Custom Functions\n\n    const onDeleteAccountClick = this.props.onDeleteAccountClick;\n    const selectedTab = this.state.selectedTab;\n    return React.createElement(Dialog, Object.assign({}, dialogProps, {\n      onExited: this.handleExited,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(DialogTitle, {\n      disableTypography: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Settings\"), React.createElement(Tooltip, {\n      title: \"Close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: classes.closeButton,\n      onClick: dialogProps.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })))), React.createElement(Hidden, {\n      xsDown: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      classes: {\n        root: classes.tabs\n      },\n      style: {\n        overflow: 'initial',\n        minHeight: 'initial'\n      },\n      indicatorColor: \"primary\",\n      textColor: \"primary\",\n      value: selectedTab,\n      variant: \"fullWidth\",\n      onChange: this.handleTabChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, tabs.map(tab => {\n      return React.createElement(Tab, {\n        key: tab.key,\n        icon: tab.icon,\n        label: tab.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      });\n    }))), React.createElement(Hidden, {\n      smUp: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      classes: {\n        root: classes.tabs\n      },\n      style: {\n        overflow: 'initial',\n        minHeight: 'initial'\n      },\n      indicatorColor: \"primary\",\n      scrollButtons: \"off\",\n      textColor: \"primary\",\n      value: selectedTab,\n      variant: \"scrollable\",\n      onChange: this.handleTabChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, tabs.map(tab => {\n      return React.createElement(Tab, {\n        key: tab.key,\n        icon: tab.icon,\n        label: tab.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      });\n    }))), React.createElement(SwipeableViews, {\n      index: selectedTab,\n      onChangeIndex: this.handleIndexChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(AccountTab, {\n      user: user,\n      userData: userData,\n      openSnackbar: openSnackbar,\n      onDeleteAccountClick: onDeleteAccountClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(AppearanceTab, {\n      theme: theme,\n      openSnackbar: openSnackbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(LinksTab, {\n      theme: theme,\n      openSnackbar: openSnackbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(SecurityTab, {\n      user: user,\n      userData: userData,\n      openSnackbar: openSnackbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    })));\n  }\n\n}\n\nSettingsDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n  // Custom Properties\n  user: PropTypes.object.isRequired,\n  userData: PropTypes.object,\n  theme: PropTypes.object.isRequired,\n  // Custom Functions\n  openSnackbar: PropTypes.func.isRequired,\n  // Custom Events\n  onDeleteAccountClick: PropTypes.func.isRequired\n};\nexport default withStyles(styles)(SettingsDialog);","map":{"version":3,"sources":["/home/hyfbe32/cookit-auth/src/components/SettingsDialog/SettingsDialog.js"],"names":["React","Component","PropTypes","withStyles","Dialog","DialogTitle","Typography","Tooltip","IconButton","Tabs","Tab","Hidden","CloseIcon","AccountCircleIcon","PaletteIcon","LinkIcon","SecurityIcon","SwipeableViews","AccountTab","AppearanceTab","LinksTab","SecurityTab","styles","theme","closeButton","position","right","spacing","top","tabs","display","key","icon","label","initialState","selectedTab","SettingsDialog","constructor","props","handleExited","setState","handleTabChange","event","value","handleIndexChange","index","state","render","classes","dialogProps","user","userData","openSnackbar","onDeleteAccountClick","onClose","root","overflow","minHeight","map","tab","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport Hidden from '@material-ui/core/Hidden';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport PaletteIcon from '@material-ui/icons/Palette';\nimport LinkIcon from '@material-ui/icons/Link';\nimport SecurityIcon from '@material-ui/icons/Security';\n\nimport SwipeableViews from 'react-swipeable-views';\n\nimport AccountTab from '../AccountTab';\nimport AppearanceTab from '../AppearanceTab';\nimport LinksTab from '../LinksTab';\nimport SecurityTab from '../SecurityTab';\n\nconst styles = (theme) => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1)\n  },\n\n  tabs: {\n    display: 'initial'\n  }\n});\n\nconst tabs = [\n  {\n    key: 'account',\n    icon: <AccountCircleIcon />,\n    label: 'Account'\n  },\n\n  {\n    key: 'appearance',\n    icon: <PaletteIcon />,\n    label: 'Appearance'\n  },\n\n  {\n    key: 'links',\n    icon: <LinkIcon />,\n    label: 'Links'\n  },\n\n  {\n    key: 'security',\n    icon: <SecurityIcon />,\n    label: 'Security'\n  }\n];\n\nconst initialState = {\n  selectedTab: 0\n};\n\nclass SettingsDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleTabChange = (event, value) => {\n    this.setState({\n      selectedTab: value\n    });\n  };\n\n  handleIndexChange = (index) => {\n    this.setState({\n      selectedTab: index\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    // Custom Properties\n    const {\n      user,\n      userData,\n      theme\n    } = this.props;\n\n    // Custom Functions\n    const {\n      openSnackbar\n    } = this.props;\n\n    // Custom Functions\n    const {\n      onDeleteAccountClick\n    } = this.props;\n\n    const { selectedTab } = this.state;\n\n    return (\n      <Dialog {...dialogProps} onExited={this.handleExited}>\n        <DialogTitle disableTypography>\n          <Typography variant=\"h6\">\n            Settings\n          </Typography>\n\n          <Tooltip title=\"Close\">\n            <IconButton className={classes.closeButton} onClick={dialogProps.onClose}>\n              <CloseIcon />\n            </IconButton>\n          </Tooltip>\n        </DialogTitle>\n\n        <Hidden xsDown>\n          <Tabs\n            classes={{ root: classes.tabs }}\n            style={{ overflow: 'initial', minHeight: 'initial' }}\n\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            value={selectedTab}\n            variant=\"fullWidth\"\n            onChange={this.handleTabChange}>\n            {tabs.map((tab) => {\n              return (\n                <Tab key={tab.key} icon={tab.icon} label={tab.label} />\n              );\n            })}\n          </Tabs>\n        </Hidden>\n\n        <Hidden smUp>\n          <Tabs\n            classes={{ root: classes.tabs }}\n            style={{ overflow: 'initial', minHeight: 'initial' }}\n\n            indicatorColor=\"primary\"\n            scrollButtons=\"off\"\n            textColor=\"primary\"\n            value={selectedTab}\n            variant=\"scrollable\"\n            onChange={this.handleTabChange}>\n            {tabs.map((tab) => {\n              return (\n                <Tab key={tab.key} icon={tab.icon} label={tab.label} />\n              );\n            })}\n          </Tabs>\n        </Hidden>\n\n        <SwipeableViews index={selectedTab} onChangeIndex={this.handleIndexChange}>\n          <AccountTab\n            user={user}\n            userData={userData}\n\n            openSnackbar={openSnackbar}\n\n            onDeleteAccountClick={onDeleteAccountClick}\n          />\n\n          <AppearanceTab\n            theme={theme}\n\n            openSnackbar={openSnackbar}\n          />\n\n          <LinksTab\n            theme={theme}\n\n            openSnackbar={openSnackbar}\n          />\n\n          <SecurityTab\n            user={user}\n            userData={userData}\n\n            openSnackbar={openSnackbar}\n          />\n        </SwipeableViews>\n      </Dialog>\n    );\n  }\n}\n\nSettingsDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Properties\n  user: PropTypes.object.isRequired,\n  userData: PropTypes.object,\n  theme: PropTypes.object.isRequired,\n\n  // Custom Functions\n  openSnackbar: PropTypes.func.isRequired,\n\n  // Custom Events\n  onDeleteAccountClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(SettingsDialog);\n"]},"metadata":{},"sourceType":"module"}