{"ast":null,"code":"import firebase, { analytics, auth, firestore, storage } from '../firebase';\nimport moment from 'moment';\nconst avatarFileTypes = ['image/gif', 'image/jpeg', 'image/png', 'image/webp', 'image/svg+xml'];\nconst authentication = {};\n\nauthentication.signUp = fields => {\n  return new Promise((resolve, reject) => {\n    if (!fields) {\n      reject();\n      return;\n    }\n\n    const firstName = fields.firstName;\n    const lastName = fields.lastName;\n    const username = fields.username;\n    const emailAddress = fields.emailAddress;\n    const password = fields.password;\n\n    if (!firstName || !lastName || !username || !emailAddress || !password) {\n      reject();\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n      return;\n    }\n\n    auth.createUserWithEmailAndPassword(emailAddress, password).then(value => {\n      const user = value.user;\n\n      if (!user) {\n        reject();\n        return;\n      }\n\n      const uid = user.uid;\n\n      if (!uid) {\n        reject();\n        return;\n      }\n\n      const reference = firestore.collection('users').doc(uid);\n\n      if (!reference) {\n        reject();\n        return;\n      }\n\n      reference.set({\n        firstName: firstName,\n        lastName: lastName,\n        username: username\n      }).then(value => {\n        analytics.logEvent('sign_up', {\n          method: 'password'\n        });\n        resolve(value);\n      }).catch(reason => {\n        reject(reason);\n      });\n    }).catch(reason => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.signUpWithEmailAddressAndPassword = (emailAddress, password) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress || !password) {\n      reject();\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n      return;\n    }\n\n    auth.createUserWithEmailAndPassword(emailAddress, password).then(value => {\n      analytics.logEvent('sign_up', {\n        method: 'password'\n      });\n      resolve(value);\n    }).catch(reason => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.signIn = (emailAddress, password) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress || !password) {\n      reject();\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n      return;\n    }\n\n    auth.signInWithEmailAndPassword(emailAddress, password).then(value => {\n      analytics.logEvent('login', {\n        method: 'password'\n      });\n      resolve(value);\n    }).catch(reason => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.signInWithAuthProvider = providerId => {\n  return new Promise((resolve, reject) => {\n    if (!providerId) {\n      reject();\n      return;\n    }\n\n    const provider = new firebase.auth.OAuthProvider(providerId);\n\n    if (!provider) {\n      reject();\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n      return;\n    }\n\n    auth.signInWithPopup(provider).then(value => {\n      analytics.logEvent('login', {\n        method: providerId\n      });\n      resolve(value);\n    }).catch(reason => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.linkAuthProvider = providerId => {\n  return new Promise((resolve, reject) => {\n    if (!providerId) {\n      reject();\n      return;\n    }\n\n    const provider = new firebase.auth.OAuthProvider(providerId);\n\n    if (!provider) {\n      reject();\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n      return;\n    }\n\n    currentUser.linkWithPopup(provider).then(value => {\n      analytics.logEvent('link_auth_provider', {\n        value: providerId\n      });\n      resolve(value);\n    }).catch(reason => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.unlinkAuthProvider = providerId => {\n  return new Promise((resolve, reject) => {\n    if (!providerId) {\n      reject();\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n      return;\n    }\n\n    currentUser.unlink(providerId).then(value => {\n      analytics.logEvent('unlink_auth_provider', {\n        value: providerId\n      });\n      resolve(value);\n    }).catch(reason => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.authProviderData = providerId => {\n  if (!providerId) {\n    return;\n  }\n\n  const currentUser = auth.currentUser;\n\n  if (!currentUser) {\n    return;\n  }\n\n  const providerData = currentUser.providerData;\n\n  if (!providerData) {\n    return;\n  }\n\n  return providerData.find(authProvider => authProvider.providerId === providerId);\n};\n\nauthentication.signOut = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n      return;\n    }\n\n    auth.signOut().then(value => {\n      analytics.logEvent('sign_out');\n      resolve(value);\n    }).catch(reason => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.resetPassword = emailAddress => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress) {\n      reject();\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n      return;\n    }\n\n    auth.sendPasswordResetEmail(emailAddress).then(value => {\n      analytics.logEvent('reset_password');\n      resolve(value);\n    }).catch(reason => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeAvatar = avatar => {\n  return new Promise((resolve, reject) => {\n    if (!avatar) {\n      reject();\n      return;\n    }\n\n    if (!avatarFileTypes.includes(avatar.type)) {\n      reject();\n      return;\n    }\n\n    if (avatar.size > 20 * 1024 * 1024) {\n      reject();\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n      return;\n    }\n\n    const reference = storage.ref().child('images').child('avatars').child(uid);\n\n    if (!reference) {\n      reject();\n      return;\n    }\n\n    reference.put(avatar).then(uploadTaskSnapshot => {\n      reference.getDownloadURL().then(value => {\n        currentUser.updateProfile({\n          photoURL: value\n        }).then(value => {\n          analytics.logEvent('change_avatar');\n          resolve(value);\n        }).catch(reason => {\n          reject(reason);\n        });\n      }).catch(reason => {\n        reject(reason);\n      });\n    }).catch(reason => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.removeAvatar = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n      return;\n    }\n\n    currentUser.updateProfile({\n      photoURL: null\n    }).then(value => {\n      const reference = storage.ref().child('images').child('avatars').child(uid);\n\n      if (!reference) {\n        reject();\n        return;\n      }\n\n      reference.delete().then(value => {\n        analytics.logEvent('remove_avatar');\n        resolve(value);\n      }).catch(reason => {\n        reject(reason);\n      });\n    }).catch(reason => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeFirstName = firstName => {\n  return new Promise((resolve, reject) => {\n    if (!firstName) {\n      reject();\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n      return;\n    }\n\n    reference.update({\n      firstName: firstName\n    }).then(value => {\n      analytics.logEvent('change_first_name');\n      resolve(value);\n    }).catch(reason => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeLastName = lastName => {\n  return new Promise((resolve, reject) => {\n    if (!lastName) {\n      reject();\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n      return;\n    }\n\n    reference.update({\n      lastName: lastName\n    }).then(value => {\n      analytics.logEvent('change_last_name');\n      resolve(value);\n    }).catch(reason => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeUsername = username => {\n  return new Promise((resolve, reject) => {\n    if (!username) {\n      reject();\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n      return;\n    }\n\n    reference.update({\n      username: username\n    }).then(value => {\n      analytics.logEvent('change_username');\n      resolve(value);\n    }).catch(reason => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeEmailAddress = emailAddress => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress) {\n      reject();\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n      return;\n    }\n\n    currentUser.updateEmail(emailAddress).then(value => {\n      analytics.logEvent('change_email_address');\n      resolve(value);\n    }).catch(reason => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changePassword = password => {\n  return new Promise((resolve, reject) => {\n    if (!password) {\n      reject();\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n      return;\n    }\n\n    currentUser.updatePassword(password).then(value => {\n      const reference = firestore.collection('users').doc(uid);\n\n      if (!reference) {\n        reject();\n        return;\n      }\n\n      reference.update({\n        lastPasswordChange: firebase.firestore.FieldValue.serverTimestamp()\n      }).then(value => {\n        analytics.logEvent('change_password');\n        resolve(value);\n      }).catch(reason => {\n        reject(reason);\n      });\n    }).catch(reason => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.verifyEmailAddress = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n      return;\n    }\n\n    currentUser.sendEmailVerification().then(value => {\n      analytics.logEvent('verify_email_address');\n      resolve(value);\n    }).catch(reason => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.deleteAccount = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n      return;\n    }\n\n    currentUser.delete().then(value => {\n      analytics.logEvent('delete_account');\n      resolve(value);\n    }).catch(reason => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.user = {};\n\nauthentication.user.getName = fields => {\n  if (!fields) {\n    return null;\n  }\n\n  const firstName = fields.firstName;\n  const username = fields.username;\n  const displayName = fields.displayName;\n  const lastName = fields.lastName;\n\n  if (firstName) {\n    return firstName;\n  }\n\n  if (username) {\n    return username;\n  }\n\n  if (displayName) {\n    return displayName;\n  }\n\n  if (lastName) {\n    return lastName;\n  }\n\n  return null;\n};\n\nauthentication.user.getFullName = fields => {\n  if (!fields) {\n    return null;\n  }\n\n  const firstName = fields.firstName;\n  const lastName = fields.lastName;\n  const displayName = fields.displayName;\n\n  if (firstName && lastName) {\n    return \"\".concat(firstName, \" \").concat(lastName);\n  }\n\n  if (displayName) {\n    return displayName;\n  }\n\n  return null;\n};\n\nauthentication.user.getNameInitials = fields => {\n  if (!fields) {\n    return null;\n  }\n\n  const firstName = fields.firstName;\n  const lastName = fields.lastName;\n  const username = fields.username;\n  const displayName = fields.displayName;\n\n  if (firstName && lastName) {\n    return firstName.charAt(0) + lastName.charAt(0);\n  }\n\n  if (firstName) {\n    return firstName.charAt(0);\n  }\n\n  if (username) {\n    return username.charAt(0);\n  }\n\n  if (lastName) {\n    return lastName.charAt(0);\n  }\n\n  if (displayName) {\n    return displayName.charAt(0);\n  }\n\n  return null;\n};\n\nauthentication.user.getProfileCompletion = fields => {\n  if (!fields) {\n    return null;\n  }\n\n  fields = [fields.photoURL, fields.firstName, fields.lastName, fields.username, fields.email, fields.email && fields.emailVerified];\n\n  if (!fields) {\n    return null;\n  }\n\n  let profileCompletion = 0;\n  fields.forEach(field => {\n    if (field) {\n      profileCompletion += 100 / fields.length;\n    }\n  });\n  return Math.floor(profileCompletion);\n};\n\nauthentication.user.getSecurityRating = (user, userData) => {\n  if (!user || !user.metadata) {\n    return null;\n  }\n\n  let creationTime = user.metadata.creationTime;\n\n  if (!creationTime) {\n    return null;\n  }\n\n  creationTime = moment(creationTime);\n  let securityRating = 0;\n\n  if (userData) {\n    let lastPasswordChange = userData.lastPasswordChange;\n\n    if (lastPasswordChange) {\n      lastPasswordChange = moment(lastPasswordChange.toDate());\n\n      if (creationTime.diff(lastPasswordChange, 'days') >= 365.242199) {\n        securityRating = 50;\n      } else {\n        securityRating = 100;\n      }\n    }\n  } else {\n    if (moment().diff(creationTime, 'days') >= 365.242199) {\n      securityRating = 50;\n    } else {\n      securityRating = 100;\n    }\n  }\n\n  return securityRating;\n};\n\nexport default authentication;","map":{"version":3,"sources":["/home/hyfbe32/cookit-auth/src/services/authentication.js"],"names":["firebase","analytics","auth","firestore","storage","moment","avatarFileTypes","authentication","signUp","fields","Promise","resolve","reject","firstName","lastName","username","emailAddress","password","currentUser","createUserWithEmailAndPassword","then","value","user","uid","reference","collection","doc","set","logEvent","method","catch","reason","signUpWithEmailAddressAndPassword","signIn","signInWithEmailAndPassword","signInWithAuthProvider","providerId","provider","OAuthProvider","signInWithPopup","linkAuthProvider","linkWithPopup","unlinkAuthProvider","unlink","authProviderData","providerData","find","authProvider","signOut","resetPassword","sendPasswordResetEmail","changeAvatar","avatar","includes","type","size","ref","child","put","uploadTaskSnapshot","getDownloadURL","updateProfile","photoURL","removeAvatar","delete","changeFirstName","update","changeLastName","changeUsername","changeEmailAddress","updateEmail","changePassword","updatePassword","lastPasswordChange","FieldValue","serverTimestamp","verifyEmailAddress","sendEmailVerification","deleteAccount","getName","displayName","getFullName","getNameInitials","charAt","getProfileCompletion","email","emailVerified","profileCompletion","forEach","field","length","Math","floor","getSecurityRating","userData","metadata","creationTime","securityRating","toDate","diff"],"mappings":"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","sourcesContent":["import firebase, { analytics, auth, firestore, storage } from '../firebase';\n\nimport moment from 'moment';\n\nconst avatarFileTypes = [\n  'image/gif',\n  'image/jpeg',\n  'image/png',\n  'image/webp',\n  'image/svg+xml'\n];\n\nconst authentication = {};\n\nauthentication.signUp = (fields) => {\n  return new Promise((resolve, reject) => {\n    if (!fields) {\n      reject();\n\n      return;\n    }\n\n    const firstName = fields.firstName;\n    const lastName = fields.lastName;\n    const username = fields.username;\n    const emailAddress = fields.emailAddress;\n    const password = fields.password;\n\n    if (!firstName || !lastName || !username || !emailAddress || !password) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.createUserWithEmailAndPassword(emailAddress, password).then((value) => {\n      const user = value.user;\n\n      if (!user) {\n        reject();\n\n        return;\n      }\n\n      const uid = user.uid;\n\n      if (!uid) {\n        reject();\n\n        return;\n      }\n\n      const reference = firestore.collection('users').doc(uid);\n\n      if (!reference) {\n        reject();\n\n        return;\n      }\n\n      reference.set({\n        firstName: firstName,\n        lastName: lastName,\n        username: username\n      }).then((value) => {\n        analytics.logEvent('sign_up', {\n          method: 'password'\n        });\n\n        resolve(value);\n      }).catch((reason) => {\n        reject(reason);\n      });\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.signUpWithEmailAddressAndPassword = (emailAddress, password) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress || !password) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.createUserWithEmailAndPassword(emailAddress, password).then((value) => {\n      analytics.logEvent('sign_up', {\n        method: 'password'\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.signIn = (emailAddress, password) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress || !password) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.signInWithEmailAndPassword(emailAddress, password).then((value) => {\n      analytics.logEvent('login', {\n        method: 'password'\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.signInWithAuthProvider = (providerId) => {\n  return new Promise((resolve, reject) => {\n    if (!providerId) {\n      reject();\n\n      return;\n    }\n\n    const provider = new firebase.auth.OAuthProvider(providerId);\n\n    if (!provider) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.signInWithPopup(provider).then((value) => {\n      analytics.logEvent('login', {\n        method: providerId\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.linkAuthProvider = (providerId) => {\n  return new Promise((resolve, reject) => {\n    if (!providerId) {\n      reject();\n\n      return;\n    }\n\n    const provider = new firebase.auth.OAuthProvider(providerId);\n\n    if (!provider) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser.linkWithPopup(provider).then((value) => {\n      analytics.logEvent('link_auth_provider', {\n        value: providerId\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.unlinkAuthProvider = (providerId) => {\n  return new Promise((resolve, reject) => {\n    if (!providerId) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser.unlink(providerId).then((value) => {\n      analytics.logEvent('unlink_auth_provider', {\n        value: providerId\n      });\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.authProviderData = (providerId) => {\n  if (!providerId) {\n    return;\n  }\n\n  const currentUser = auth.currentUser;\n\n  if (!currentUser) {\n    return;\n  }\n\n  const providerData = currentUser.providerData;\n\n  if (!providerData) {\n    return;\n  }\n\n  return providerData.find(authProvider => authProvider.providerId === providerId);\n};\n\nauthentication.signOut = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.signOut().then((value) => {\n      analytics.logEvent('sign_out');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.resetPassword = (emailAddress) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth.sendPasswordResetEmail(emailAddress).then((value) => {\n      analytics.logEvent('reset_password');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeAvatar = (avatar) => {\n  return new Promise((resolve, reject) => {\n    if (!avatar) {\n      reject();\n\n      return;\n    }\n\n    if (!avatarFileTypes.includes(avatar.type)) {\n      reject();\n\n      return;\n    }\n\n    if (avatar.size > (20 * 1024 * 1024)) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = storage.ref().child('images').child('avatars').child(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.put(avatar).then((uploadTaskSnapshot) => {\n      reference.getDownloadURL().then((value) => {\n        currentUser.updateProfile({\n          photoURL: value\n        }).then((value) => {\n          analytics.logEvent('change_avatar');\n\n          resolve(value);\n        }).catch((reason) => {\n          reject(reason);\n        });\n      }).catch((reason) => {\n        reject(reason);\n      });\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.removeAvatar = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    currentUser.updateProfile({\n      photoURL: null\n    }).then((value) => {\n      const reference = storage.ref().child('images').child('avatars').child(uid);\n\n      if (!reference) {\n        reject();\n\n        return;\n      }\n\n      reference.delete().then((value) => {\n        analytics.logEvent('remove_avatar');\n\n        resolve(value);\n      }).catch((reason) => {\n        reject(reason);\n      });\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeFirstName = (firstName) => {\n  return new Promise((resolve, reject) => {\n    if (!firstName) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      firstName: firstName\n    }).then((value) => {\n      analytics.logEvent('change_first_name');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeLastName = (lastName) => {\n  return new Promise((resolve, reject) => {\n    if (!lastName) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      lastName: lastName\n    }).then((value) => {\n      analytics.logEvent('change_last_name');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeUsername = (username) => {\n  return new Promise((resolve, reject) => {\n    if (!username) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const reference = firestore.collection('users').doc(uid);\n\n    if (!reference) {\n      reject();\n\n      return;\n    }\n\n    reference.update({\n      username: username\n    }).then((value) => {\n      analytics.logEvent('change_username');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changeEmailAddress = (emailAddress) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    currentUser.updateEmail(emailAddress).then((value) => {\n      analytics.logEvent('change_email_address');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.changePassword = (password) => {\n  return new Promise((resolve, reject) => {\n    if (!password) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    currentUser.updatePassword(password).then((value) => {\n      const reference = firestore.collection('users').doc(uid);\n\n      if (!reference) {\n        reject();\n\n        return;\n      }\n\n      reference.update({\n        lastPasswordChange: firebase.firestore.FieldValue.serverTimestamp()\n      }).then((value) => {\n        analytics.logEvent('change_password');\n\n        resolve(value);\n      }).catch((reason) => {\n        reject(reason);\n      });\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.verifyEmailAddress = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser.sendEmailVerification().then((value) => {\n      analytics.logEvent('verify_email_address');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.deleteAccount = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser.delete().then((value) => {\n      analytics.logEvent('delete_account');\n\n      resolve(value);\n    }).catch((reason) => {\n      reject(reason);\n    });\n  });\n};\n\nauthentication.user = {};\n\nauthentication.user.getName = (fields) => {\n  if (!fields) {\n    return null;\n  }\n\n  const firstName = fields.firstName;\n  const username = fields.username;\n  const displayName = fields.displayName;\n  const lastName = fields.lastName;\n\n  if (firstName) {\n    return firstName;\n  }\n\n  if (username) {\n    return username;\n  }\n\n  if (displayName) {\n    return displayName;\n  }\n\n  if (lastName) {\n    return lastName;\n  }\n\n  return null;\n};\n\nauthentication.user.getFullName = (fields) => {\n  if (!fields) {\n    return null;\n  }\n\n  const firstName = fields.firstName;\n  const lastName = fields.lastName;\n  const displayName = fields.displayName;\n\n  if (firstName && lastName) {\n    return `${firstName} ${lastName}`;\n  }\n\n  if (displayName) {\n    return displayName;\n  }\n\n  return null;\n};\n\nauthentication.user.getNameInitials = (fields) => {\n  if (!fields) {\n    return null;\n  }\n\n  const firstName = fields.firstName;\n  const lastName = fields.lastName;\n  const username = fields.username;\n  const displayName = fields.displayName;\n\n  if (firstName && lastName) {\n    return firstName.charAt(0) + lastName.charAt(0);\n  }\n\n  if (firstName) {\n    return firstName.charAt(0);\n  }\n\n  if (username) {\n    return username.charAt(0);\n  }\n\n  if (lastName) {\n    return lastName.charAt(0);\n  }\n\n  if (displayName) {\n    return displayName.charAt(0);\n  }\n\n  return null;\n};\n\nauthentication.user.getProfileCompletion = (fields) => {\n  if (!fields) {\n    return null;\n  }\n\n  fields = [\n    fields.photoURL,\n    fields.firstName,\n    fields.lastName,\n    fields.username,\n    fields.email,\n    fields.email && fields.emailVerified\n  ];\n\n  if (!fields) {\n    return null;\n  }\n\n  let profileCompletion = 0;\n\n  fields.forEach((field) => {\n    if (field) {\n      profileCompletion += 100 / fields.length;\n    }\n  });\n\n  return Math.floor(profileCompletion);\n};\n\nauthentication.user.getSecurityRating = (user, userData) => {\n  if (!user || !user.metadata) {\n    return null;\n  }\n\n  let creationTime = user.metadata.creationTime;\n\n  if (!creationTime) {\n    return null;\n  }\n\n  creationTime = moment(creationTime);\n\n  let securityRating = 0;\n\n  if (userData) {\n    let lastPasswordChange = userData.lastPasswordChange;\n\n    if (lastPasswordChange) {\n      lastPasswordChange = moment(lastPasswordChange.toDate());\n\n      if (creationTime.diff(lastPasswordChange, 'days') >= 365.242199) {\n        securityRating = 50;\n      } else {\n        securityRating = 100;\n      }\n    }\n  } else {\n    if (moment().diff(creationTime, 'days') >= 365.242199) {\n      securityRating = 50;\n    } else {\n      securityRating = 100;\n    }\n  }\n\n  return securityRating;\n};\n\nexport default authentication;\n"]},"metadata":{},"sourceType":"module"}