{"ast":null,"code":"var _jsxFileName = \"/home/hyfbe32/cookit-auth/src/components/App/App.js\";\nimport React, { Component } from 'react';\nimport readingTime from 'reading-time';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { auth, firestore } from '../../firebase';\nimport authentication from '../../services/authentication';\nimport theming from '../../services/theming';\nimport LaunchScreen from '../LaunchScreen';\nimport Bar from '../Bar';\nimport Router from '../Router';\nimport DialogHost from '../DialogHost';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.openDialog = (dialogId, callback) => {\n      const dialog = this.state[dialogId];\n\n      if (!dialog || dialog.open === undefined || null) {\n        return;\n      }\n\n      dialog.open = true;\n      this.setState({\n        dialog\n      }, callback);\n    };\n\n    this.closeDialog = (dialogId, callback) => {\n      const dialog = this.state[dialogId];\n\n      if (!dialog || dialog.open === undefined || null) {\n        return;\n      }\n\n      dialog.open = false;\n      this.setState({\n        dialog\n      }, callback);\n    };\n\n    this.deleteAccount = () => {\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.deleteAccount().then(() => {\n          this.closeDialog('deleteAccountDialog', () => {\n            this.openSnackbar('Deleted account');\n          });\n        }).catch(reason => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    };\n\n    this.signOut = () => {\n      this.setState({\n        performingAction: true\n      }, () => {\n        authentication.signOut().then(() => {\n          this.closeDialog('signOutDialog', () => {\n            this.openSnackbar('Signed out');\n          });\n        }).catch(reason => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            default:\n              this.openSnackbar(message);\n              return;\n          }\n        }).finally(() => {\n          this.setState({\n            performingAction: false\n          });\n        });\n      });\n    };\n\n    this.openSnackbar = (message, autoHideDuration = 2, callback) => {\n      this.setState({\n        snackbar: {\n          autoHideDuration: readingTime(message).time * autoHideDuration,\n          message,\n          open: true\n        }\n      }, () => {\n        if (callback && typeof callback === 'function') {\n          callback();\n        }\n      });\n    };\n\n    this.closeSnackbar = (clearMessage = false) => {\n      const snackbar = this.state.snackbar;\n      this.setState({\n        snackbar: {\n          message: clearMessage ? '' : snackbar.message,\n          open: false\n        }\n      });\n    };\n\n    this.state = {\n      user: null,\n      userData: null,\n      theme: theming.defaultTheme,\n      ready: false,\n      performingAction: false,\n      signUpDialog: {\n        open: false\n      },\n      signInDialog: {\n        open: false\n      },\n      settingsDialog: {\n        open: false\n      },\n      deleteAccountDialog: {\n        open: false\n      },\n      signOutDialog: {\n        open: false\n      },\n      snackbar: {\n        autoHideDuration: 0,\n        message: '',\n        open: false\n      }\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          user = _this$state.user,\n          userData = _this$state.userData,\n          theme = _this$state.theme,\n          ready = _this$state.ready,\n          performingAction = _this$state.performingAction;\n    const _this$state2 = this.state,\n          signUpDialog = _this$state2.signUpDialog,\n          signInDialog = _this$state2.signInDialog,\n          settingsDialog = _this$state2.settingsDialog,\n          deleteAccountDialog = _this$state2.deleteAccountDialog,\n          signOutDialog = _this$state2.signOutDialog;\n    const snackbar = this.state.snackbar;\n    return React.createElement(MuiThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), !ready && React.createElement(LaunchScreen, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), ready && React.createElement(React.Fragment, null, React.createElement(Bar, {\n      performingAction: performingAction,\n      user: user,\n      userData: userData,\n      onSignUpClick: () => this.openDialog('signUpDialog'),\n      onSignInClick: () => this.openDialog('signInDialog'),\n      onSettingsClick: () => this.openDialog('settingsDialog'),\n      onSignOutClick: () => this.openDialog('signOutDialog'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(Router, {\n      user: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(DialogHost, {\n      user: user,\n      dialogs: {\n        signUpDialog: {\n          dialogProps: {\n            open: signUpDialog.open,\n            onClose: callback => {\n              this.closeDialog('signUpDialog');\n\n              if (callback && typeof callback === 'function') {\n                callback();\n              }\n            }\n          },\n          props: {\n            performingAction: performingAction,\n            openSnackbar: this.openSnackbar\n          }\n        },\n        signInDialog: {\n          dialogProps: {\n            open: signInDialog.open,\n            onClose: callback => {\n              this.closeDialog('signInDialog');\n\n              if (callback && typeof callback === 'function') {\n                callback();\n              }\n            }\n          },\n          props: {\n            performingAction: performingAction,\n            openSnackbar: this.openSnackbar\n          }\n        },\n        settingsDialog: {\n          dialogProps: {\n            open: settingsDialog.open,\n            onClose: () => this.closeDialog('settingsDialog')\n          },\n          props: {\n            user: user,\n            userData: userData,\n            theme: theme,\n            openSnackbar: this.openSnackbar,\n            onDeleteAccountClick: () => this.openDialog('deleteAccountDialog')\n          }\n        },\n        deleteAccountDialog: {\n          dialogProps: {\n            open: deleteAccountDialog.open,\n            onClose: () => this.closeDialog('deleteAccountDialog')\n          },\n          props: {\n            performingAction: performingAction,\n            userData: userData,\n            deleteAccount: this.deleteAccount\n          }\n        },\n        signOutDialog: {\n          dialogProps: {\n            open: signOutDialog.open,\n            onClose: () => this.closeDialog('signOutDialog')\n          },\n          props: {\n            title: 'Sign out?',\n            contentText: 'While signed out you are unable to manage your profile and conduct other activities that require you to be signed in.',\n            dismissiveAction: React.createElement(Button, {\n              color: \"primary\",\n              onClick: () => this.closeDialog('signOutDialog'),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 292\n              },\n              __self: this\n            }, \"Cancel\"),\n            confirmingAction: React.createElement(Button, {\n              color: \"primary\",\n              disabled: performingAction,\n              variant: \"contained\",\n              onClick: this.signOut,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 293\n              },\n              __self: this\n            }, \"Sign Out\")\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(Snackbar, {\n      autoHideDuration: snackbar.autoHideDuration,\n      message: snackbar.message,\n      open: snackbar.open,\n      onClose: this.closeSnackbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    })));\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.removeAuthStateChangedObserver = auth.onAuthStateChanged(user => {\n      if (!user) {\n        if (this.removeReferenceListener) {\n          this.removeReferenceListener();\n        }\n\n        if (this.mounted) {\n          this.setState({\n            user: null,\n            userData: null,\n            theme: theming.defaultTheme,\n            ready: true\n          });\n        }\n\n        return;\n      }\n\n      const uid = user.uid;\n\n      if (!uid) {\n        if (this.removeReferenceListener) {\n          this.removeReferenceListener();\n        }\n\n        if (this.mounted) {\n          this.setState({\n            user: user,\n            userData: null,\n            theme: theming.defaultTheme,\n            ready: true\n          });\n        }\n\n        return;\n      }\n\n      const reference = firestore.collection('users').doc(uid);\n\n      if (!reference) {\n        if (this.removeReferenceListener) {\n          this.removeReferenceListener();\n        }\n\n        if (this.mounted) {\n          this.setState({\n            user: user,\n            userData: null,\n            theme: theming.defaultTheme,\n            ready: true\n          });\n        }\n\n        return;\n      }\n\n      this.removeReferenceListener = reference.onSnapshot(snapshot => {\n        if (!snapshot.exists) {\n          if (this.removeReferenceListener) {\n            this.removeReferenceListener();\n          }\n\n          if (this.mounted) {\n            this.setState({\n              user: user,\n              userData: null,\n              theme: theming.defaultTheme,\n              ready: true\n            });\n          }\n\n          return;\n        }\n\n        const data = snapshot.data();\n\n        if (!data) {\n          if (this.removeReferenceListener) {\n            this.removeReferenceListener();\n          }\n\n          if (this.mounted) {\n            this.setState({\n              user: user,\n              userData: null,\n              theme: theming.defaultTheme,\n              ready: true\n            });\n          }\n\n          return;\n        }\n\n        if (data.theme) {\n          this.setState({\n            theme: theming.createTheme(data.theme)\n          });\n        } else {\n          this.setState({\n            theme: theming.defaultTheme\n          });\n        }\n\n        if (this.mounted) {\n          this.setState({\n            user: user,\n            userData: data,\n            ready: true\n          });\n        }\n      }, error => {\n        if (this.removeReferenceListener) {\n          this.removeReferenceListener();\n        }\n\n        if (this.mounted) {\n          this.setState({\n            user: user,\n            userData: null,\n            theme: theming.defaultTheme,\n            ready: true\n          }, () => {\n            const code = error.code;\n            const message = error.message;\n\n            switch (code) {\n              default:\n                this.openSnackbar(message);\n                return;\n            }\n          });\n        }\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.removeAuthStateChangedObserver) {\n      this.removeAuthStateChangedObserver();\n    }\n\n    if (this.removeReferenceListener) {\n      this.removeReferenceListener();\n    }\n\n    this.mounted = false;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/hyfbe32/cookit-auth/src/components/App/App.js"],"names":["React","Component","readingTime","MuiThemeProvider","CssBaseline","Button","Snackbar","auth","firestore","authentication","theming","LaunchScreen","Bar","Router","DialogHost","App","constructor","props","openDialog","dialogId","callback","dialog","state","open","undefined","setState","closeDialog","deleteAccount","performingAction","then","openSnackbar","catch","reason","code","message","finally","signOut","autoHideDuration","snackbar","time","closeSnackbar","clearMessage","user","userData","theme","defaultTheme","ready","signUpDialog","signInDialog","settingsDialog","deleteAccountDialog","signOutDialog","render","dialogProps","onClose","onDeleteAccountClick","title","contentText","dismissiveAction","confirmingAction","componentDidMount","mounted","removeAuthStateChangedObserver","onAuthStateChanged","removeReferenceListener","uid","reference","collection","doc","onSnapshot","snapshot","exists","data","createTheme","error","componentWillUnmount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport readingTime from 'reading-time';\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { auth, firestore } from '../../firebase';\nimport authentication from '../../services/authentication';\nimport theming from '../../services/theming';\n\nimport LaunchScreen from '../LaunchScreen';\n\nimport Bar from '../Bar';\n\nimport Router from '../Router';\nimport DialogHost from '../DialogHost';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: null,\n      userData: null,\n      theme: theming.defaultTheme,\n\n      ready: false,\n      performingAction: false,\n\n      signUpDialog: {\n        open: false\n      },\n\n      signInDialog: {\n        open: false\n      },\n\n      settingsDialog: {\n        open: false\n      },\n\n      deleteAccountDialog: {\n        open: false\n      },\n\n      signOutDialog: {\n        open: false\n      },\n\n      snackbar: {\n        autoHideDuration: 0,\n        message: '',\n        open: false\n      }\n    };\n  }\n\n  openDialog = (dialogId, callback) => {\n    const dialog = this.state[dialogId];\n\n    if (!dialog || dialog.open === undefined || null) {\n      return;\n    }\n\n    dialog.open = true;\n\n    this.setState({ dialog }, callback);\n  };\n\n  closeDialog = (dialogId, callback) => {\n    const dialog = this.state[dialogId];\n\n    if (!dialog || dialog.open === undefined || null) {\n      return;\n    }\n\n    dialog.open = false;\n\n    this.setState({ dialog }, callback);\n  };\n\n  deleteAccount = () => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.deleteAccount().then(() => {\n        this.closeDialog('deleteAccountDialog', () => {\n          this.openSnackbar('Deleted account');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  signOut = () => {\n    this.setState({\n      performingAction: true\n    }, () => {\n      authentication.signOut().then(() => {\n        this.closeDialog('signOutDialog', () => {\n          this.openSnackbar('Signed out');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          performingAction: false\n        });\n      });\n    });\n  };\n\n  openSnackbar = (message, autoHideDuration = 2, callback) => {\n    this.setState({\n      snackbar: {\n        autoHideDuration: readingTime(message).time * autoHideDuration,\n        message,\n        open: true\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  closeSnackbar = (clearMessage = false) => {\n    const { snackbar } = this.state;\n\n    this.setState({\n      snackbar: {\n        message: clearMessage ? '' : snackbar.message,\n        open: false\n      }\n    });\n  };\n\n  render() {\n    const {\n      user,\n      userData,\n      theme,\n      ready,\n      performingAction,\n    } = this.state;\n\n    const {\n      signUpDialog,\n      signInDialog,\n      settingsDialog,\n      deleteAccountDialog,\n      signOutDialog\n    } = this.state;\n\n    const { snackbar } = this.state;\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n\n        {!ready &&\n          <LaunchScreen />\n        }\n\n        {ready &&\n          <>\n            <Bar\n              performingAction={performingAction}\n\n              user={user}\n              userData={userData}\n\n              onSignUpClick={() => this.openDialog('signUpDialog')}\n              onSignInClick={() => this.openDialog('signInDialog')}\n\n              onSettingsClick={() => this.openDialog('settingsDialog')}\n              onSignOutClick={() => this.openDialog('signOutDialog')}\n            />\n\n            <Router user={user} />\n\n            <DialogHost\n              user={user}\n              dialogs={\n                {\n                  signUpDialog: {\n                    dialogProps: {\n                      open: signUpDialog.open,\n\n                      onClose: (callback) => {\n                        this.closeDialog('signUpDialog');\n\n                        if (callback && typeof callback === 'function') {\n                          callback();\n                        }\n                      }\n                    },\n\n                    props: {\n                      performingAction: performingAction,\n\n                      openSnackbar: this.openSnackbar\n                    }\n                  },\n\n                  signInDialog: {\n                    dialogProps: {\n                      open: signInDialog.open,\n\n                      onClose: (callback) => {\n                        this.closeDialog('signInDialog');\n\n                        if (callback && typeof callback === 'function') {\n                          callback();\n                        }\n                      }\n                    },\n\n                    props: {\n                      performingAction: performingAction,\n\n                      openSnackbar: this.openSnackbar\n                    }\n                  },\n\n                  settingsDialog: {\n                    dialogProps: {\n                      open: settingsDialog.open,\n\n                      onClose: () => this.closeDialog('settingsDialog')\n                    },\n\n                    props: {\n                      user: user,\n                      userData: userData,\n                      theme: theme,\n\n                      openSnackbar: this.openSnackbar,\n\n                      onDeleteAccountClick: () => this.openDialog('deleteAccountDialog')\n                    }\n                  },\n\n                  deleteAccountDialog: {\n                    dialogProps: {\n                      open: deleteAccountDialog.open,\n\n                      onClose: () => this.closeDialog('deleteAccountDialog')\n                    },\n\n                    props: {\n                      performingAction: performingAction,\n                      userData: userData,\n\n                      deleteAccount: this.deleteAccount\n                    }\n                  },\n\n                  signOutDialog: {\n                    dialogProps: {\n                      open: signOutDialog.open,\n\n                      onClose: () => this.closeDialog('signOutDialog')\n                    },\n\n                    props: {\n                      title: 'Sign out?',\n                      contentText: 'While signed out you are unable to manage your profile and conduct other activities that require you to be signed in.',\n                      dismissiveAction: <Button color=\"primary\" onClick={() => this.closeDialog('signOutDialog')}>Cancel</Button>,\n                      confirmingAction: <Button color=\"primary\" disabled={performingAction} variant=\"contained\" onClick={this.signOut}>Sign Out</Button>\n                    }\n                  }\n                }\n              }\n            />\n\n            <Snackbar\n              autoHideDuration={snackbar.autoHideDuration}\n              message={snackbar.message}\n              open={snackbar.open}\n              onClose={this.closeSnackbar}\n            />\n          </>\n        }\n      </MuiThemeProvider>\n    );\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n\n    this.removeAuthStateChangedObserver = auth.onAuthStateChanged((user) => {\n      if (!user) {\n        if (this.removeReferenceListener) {\n          this.removeReferenceListener();\n        }\n\n        if (this.mounted) {\n          this.setState({\n            user: null,\n            userData: null,\n            theme: theming.defaultTheme,\n\n            ready: true\n          });\n        }\n\n        return;\n      }\n\n      const uid = user.uid;\n\n      if (!uid) {\n        if (this.removeReferenceListener) {\n          this.removeReferenceListener();\n        }\n\n        if (this.mounted) {\n          this.setState({\n            user: user,\n            userData: null,\n            theme: theming.defaultTheme,\n\n            ready: true\n          });\n        }\n\n        return;\n      }\n\n      const reference = firestore.collection('users').doc(uid);\n\n      if (!reference) {\n        if (this.removeReferenceListener) {\n          this.removeReferenceListener();\n        }\n\n        if (this.mounted) {\n          this.setState({\n            user: user,\n            userData: null,\n            theme: theming.defaultTheme,\n\n            ready: true\n          });\n        }\n\n        return;\n      }\n\n      this.removeReferenceListener = reference.onSnapshot((snapshot) => {\n        if (!snapshot.exists) {\n          if (this.removeReferenceListener) {\n            this.removeReferenceListener();\n          }\n\n          if (this.mounted) {\n            this.setState({\n              user: user,\n              userData: null,\n              theme: theming.defaultTheme,\n\n              ready: true\n            });\n          }\n\n          return;\n        }\n\n        const data = snapshot.data();\n\n        if (!data) {\n          if (this.removeReferenceListener) {\n            this.removeReferenceListener();\n          }\n\n          if (this.mounted) {\n            this.setState({\n              user: user,\n              userData: null,\n              theme: theming.defaultTheme,\n\n              ready: true\n            });\n          }\n\n          return;\n        }\n\n        if (data.theme) {\n          this.setState({\n            theme: theming.createTheme(data.theme)\n          });\n        } else {\n          this.setState({\n            theme: theming.defaultTheme\n          });\n        }\n\n        if (this.mounted) {\n          this.setState({\n            user: user,\n            userData: data,\n\n            ready: true\n          });\n        }\n      }, (error) => {\n        if (this.removeReferenceListener) {\n          this.removeReferenceListener();\n        }\n\n        if (this.mounted) {\n          this.setState({\n            user: user,\n            userData: null,\n            theme: theming.defaultTheme,\n\n            ready: true\n          }, () => {\n            const code = error.code;\n            const message = error.message;\n\n            switch (code) {\n              default:\n                this.openSnackbar(message);\n                return;\n            }\n          });\n        }\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.removeAuthStateChangedObserver) {\n      this.removeAuthStateChangedObserver();\n    }\n\n    if (this.removeReferenceListener) {\n      this.removeReferenceListener();\n    }\n\n    this.mounted = false;\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}