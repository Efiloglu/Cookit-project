{"ast":null,"code":"var _jsxFileName = \"/home/hyfbe32/cookit-auth/src/components/AlertDialog/AlertDialog.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nconst styles = theme => ({\n  noTitlePadding: {\n    paddingTop: theme.spacing(3)\n  }\n});\n\nclass AlertDialog extends Component {\n  render() {\n    // Styling\n    const classes = this.props.classes; // Dialog Properties\n\n    const dialogProps = this.props.dialogProps; // Custom Properties\n\n    const _this$props = this.props,\n          title = _this$props.title,\n          contentText = _this$props.contentText,\n          dismissiveAction = _this$props.dismissiveAction,\n          confirmingAction = _this$props.confirmingAction,\n          acknowledgementAction = _this$props.acknowledgementAction;\n\n    if ((dismissiveAction || confirmingAction) && acknowledgementAction) {\n      console.error('Dialogs should contain a maximum of two actions. ' + 'If a single action is provided, it must be an acknowledgement action. ' + 'If two actions are provided, one must be a confirming action, and the other a dismissing action. ' + 'Providing a third action such as “Learn more” is not recommended as it navigates the user away from the dialog, leaving the dialog task unfinished. ' + 'https://material.io/design/components/dialogs.html#actions');\n      return null;\n    }\n\n    return React.createElement(Dialog, Object.assign({}, dialogProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), title && React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, title), React.createElement(DialogContent, {\n      className: title ? null : classes.noTitlePadding,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, contentText)), (dismissiveAction || confirmingAction || acknowledgementAction) && React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, dismissiveAction, confirmingAction, acknowledgementAction));\n  }\n\n}\n\nAlertDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n  // Custom Properties\n  title: PropTypes.string,\n  contentText: PropTypes.string.isRequired,\n  dismissiveAction: PropTypes.element,\n  confirmingAction: PropTypes.element,\n  acknowledgementAction: PropTypes.element\n};\nexport default withStyles(styles)(AlertDialog);","map":{"version":3,"sources":["/home/hyfbe32/cookit-auth/src/components/AlertDialog/AlertDialog.js"],"names":["React","Component","PropTypes","withStyles","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","styles","theme","noTitlePadding","paddingTop","spacing","AlertDialog","render","classes","props","dialogProps","title","contentText","dismissiveAction","confirmingAction","acknowledgementAction","console","error","propTypes","object","isRequired","string","element"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;;AAEA,MAAMC,MAAM,GAAIC,KAAD,KAAY;AACzBC,EAAAA,cAAc,EAAE;AACdC,IAAAA,UAAU,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADE;AADS,CAAZ,CAAf;;AAMA,MAAMC,WAAN,SAA0Bb,SAA1B,CAAoC;AAClCc,EAAAA,MAAM,GAAG;AACP;AADO,UAECC,OAFD,GAEa,KAAKC,KAFlB,CAECD,OAFD,EAIP;;AAJO,UAKCE,WALD,GAKiB,KAAKD,KALtB,CAKCC,WALD,EAOP;;AAPO,wBAcH,KAAKD,KAdF;AAAA,UASLE,KATK,eASLA,KATK;AAAA,UAULC,WAVK,eAULA,WAVK;AAAA,UAWLC,gBAXK,eAWLA,gBAXK;AAAA,UAYLC,gBAZK,eAYLA,gBAZK;AAAA,UAaLC,qBAbK,eAaLA,qBAbK;;AAgBP,QAAI,CAACF,gBAAgB,IAAIC,gBAArB,KAA0CC,qBAA9C,EAAqE;AACnEC,MAAAA,OAAO,CAACC,KAAR,CACE,sDACA,wEADA,GAEA,mGAFA,GAGA,sJAHA,GAIA,4DALF;AAQA,aAAO,IAAP;AACD;;AAED,WACE,oBAAC,MAAD,oBAAYP,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGC,KAAK,IACJ,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAcA,KAAd,CAFJ,EAKE,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAEA,KAAK,GAAG,IAAH,GAAUH,OAAO,CAACL,cAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGS,WADH,CADF,CALF,EAWG,CAACC,gBAAgB,IAAIC,gBAApB,IAAwCC,qBAAzC,KACC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,gBADH,EAEGC,gBAFH,EAGGC,qBAHH,CAZJ,CADF;AAqBD;;AAlDiC;;AAqDpCT,WAAW,CAACY,SAAZ,GAAwB;AACtB;AACAV,EAAAA,OAAO,EAAEd,SAAS,CAACyB,MAAV,CAAiBC,UAFJ;AAItB;AACAV,EAAAA,WAAW,EAAEhB,SAAS,CAACyB,MAAV,CAAiBC,UALR;AAOtB;AACAT,EAAAA,KAAK,EAAEjB,SAAS,CAAC2B,MARK;AAStBT,EAAAA,WAAW,EAAElB,SAAS,CAAC2B,MAAV,CAAiBD,UATR;AAUtBP,EAAAA,gBAAgB,EAAEnB,SAAS,CAAC4B,OAVN;AAWtBR,EAAAA,gBAAgB,EAAEpB,SAAS,CAAC4B,OAXN;AAYtBP,EAAAA,qBAAqB,EAAErB,SAAS,CAAC4B;AAZX,CAAxB;AAeA,eAAe3B,UAAU,CAACM,MAAD,CAAV,CAAmBK,WAAnB,CAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nconst styles = (theme) => ({\n  noTitlePadding: {\n    paddingTop: theme.spacing(3)\n  }\n});\n\nclass AlertDialog extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    // Custom Properties\n    const {\n      title,\n      contentText,\n      dismissiveAction,\n      confirmingAction,\n      acknowledgementAction\n    } = this.props;\n\n    if ((dismissiveAction || confirmingAction) && acknowledgementAction) {\n      console.error(\n        'Dialogs should contain a maximum of two actions. ' +\n        'If a single action is provided, it must be an acknowledgement action. ' +\n        'If two actions are provided, one must be a confirming action, and the other a dismissing action. ' +\n        'Providing a third action such as “Learn more” is not recommended as it navigates the user away from the dialog, leaving the dialog task unfinished. ' +\n        'https://material.io/design/components/dialogs.html#actions'\n      );\n\n      return null;\n    }\n\n    return (\n      <Dialog {...dialogProps}>\n        {title &&\n          <DialogTitle>{title}</DialogTitle>\n        }\n\n        <DialogContent className={title ? null : classes.noTitlePadding}>\n          <DialogContentText>\n            {contentText}\n          </DialogContentText>\n        </DialogContent>\n\n        {(dismissiveAction || confirmingAction || acknowledgementAction) &&\n          <DialogActions>\n            {dismissiveAction}\n            {confirmingAction}\n            {acknowledgementAction}\n          </DialogActions>\n        }\n      </Dialog>\n    );\n  }\n}\n\nAlertDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Properties\n  title: PropTypes.string,\n  contentText: PropTypes.string.isRequired,\n  dismissiveAction: PropTypes.element,\n  confirmingAction: PropTypes.element,\n  acknowledgementAction: PropTypes.element,\n};\n\nexport default withStyles(styles)(AlertDialog);\n"]},"metadata":{},"sourceType":"module"}